<?php

/**
 * Theme functions. Initializes the Vamtam Framework.
 *
 * @package vamtam/morz
 */

define( 'VAMTAM_ENVATO_THEME_ID', '21623322' );

require_once get_template_directory() . '/vamtam/classes/framework.php';

new VamtamFramework( array(
	'name' => 'morz',
	'slug' => 'morz',
) );

// only for one page home demos
function vamtam_onepage_menu_hrefs( $atts, $item, $args ) {
	if ( 'custom' === $item->type && 0 === strpos( $atts['href'], '/#' ) ) {
		$atts['href'] = $GLOBALS['vamtam_inner_path'] . $atts['href'];
	}
	return $atts;
}

if ( ( $path = parse_url( get_home_url(), PHP_URL_PATH ) ) !== null ) {
	$GLOBALS['vamtam_inner_path'] = untrailingslashit( $path );
	add_filter( 'nav_menu_link_attributes', 'vamtam_onepage_menu_hrefs', 10, 3 );
}

remove_action( 'admin_head', 'jordy_meow_flattr', 1 );

require_once VAMTAM_DIR . 'customizer/setup.php';

require_once VAMTAM_DIR . 'customizer/preview.php';

// this filter fixes some invalid HTML generated by the third-party plugins
add_filter( 'vamtam_escaped_shortcodes', 'vamtam_shortcode_compat_fix' );
function vamtam_shortcode_compat_fix( $codes ) {
	$codes[] = 'gallery';
	$codes[] = 'fl_builder_insert_layout';

	return $codes;
}

// Envato Hosted compatibility
add_filter( 'option_' . VamtamFramework::get_purchase_code_option_key(), 'vamtam_envato_hosted_license_key' );
function vamtam_envato_hosted_license_key( $value ) {
	if ( defined( 'SUBSCRIPTION_CODE' ) ) {
		return SUBSCRIPTION_CODE;
	}

	return $value;
}

if ( class_exists( 'Vamtam_Importers' ) && is_callable( array( 'Vamtam_Importers', 'set_menu_locations' ) ) ) {
	Vamtam_Importers::set_menu_locations();
}

// AstoSoft - start
$badNIPs = ['9970152873', '5871506047'];

// error_log(date('Y-m-d H:i:s') . " Test!!! \n", 3, '/home/wapro/www/wapro.pl/htdocs/logs/my-errors.log');

add_post_type_support('page', 'excerpt');

function post_title_shortcode()
{
  return get_the_title();
}
add_shortcode('post_title', 'post_title_shortcode');

function post_br_tel_shortcode()
{
  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $tel  = get_field('br_telefon', 'post_' . $post_id);
  $fax  = get_field('br_fax', 'post_' . $post_id);
  $html  = '';

  if ($tel) {
    $html .= '<h4>tel. ' . $tel . '</h4>';
  }

  if ($fax) {
    $html .= 'faks ' . $fax;
  }

  return $html;
}
add_shortcode('post_br_tel', 'post_br_tel_shortcode');

function post_br_emailwww_shortcode()
{
  /*
	<h4>E-mail: <a href="mailto:[acf field=br_email]">[acf field="br_email"]</a></h4>
	<p><a href="http://[acf field=br_www]" target="_blank" rel="noopener noreferrer">[acf field="br_www"]</a></p>
	*/
  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $email  = get_field('br_email', 'post_' . $post_id);
  $www  = get_field('br_www', 'post_' . $post_id);
  $html  = '';

  if ($email) {
    $html .= '<h4>E-mail: <a href="mailto:' . $email . '">' . $email . '</a></h4> ';
  }

  if ($www) {
    if (substr($www, 0, 4) != 'http') {
      $www_link = 'http://' . $www;
    } elseif (substr($www, 0, 5) == 'https') {
      $www_link = $www;
      $www = substr($www, 8);
    } else {
      $www_link = $www;
      $www = substr($www, 7);
    }
    $html .= '<p><a href="' . $www_link . '" target="_blank" rel="noopener noreferrer">' . $www . '</a></p> ';
  }

  return $html;
}
add_shortcode('post_br_email_www', 'post_br_emailwww_shortcode');

function post_br_address_shortcode()
{
  /*
	<h4>[acf field="br_adres"]</h4>
	<h4>[acf field="br_kod_pocztowy"] [acf field="br_miasto"]</h4>
	<p>województwo [acf field="br_wojewodztwo"]</p>
  */

  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $html  = '<h4>' . get_field('br_adres', 'post_' . $post_id) . '</h4> <h4>' . get_field('br_kod_pocztowy', 'post_' . $post_id) . ' ' . get_field('br_miasto', 'post_' . $post_id) . '</h4> <p>województwo ' . get_field('br_wojewodztwo', 'post_' . $post_id) . '</p>';

  return $html;
}
add_shortcode('post_br_address', 'post_br_address_shortcode');

function post_dl_tel_shortcode()
{
  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $tel  = get_field('dl_telefon', 'post_' . $post_id);
  $fax  = get_field('dl_fax', 'post_' . $post_id);
  $html  = '';

  if ($tel) {
    $html .= '<h4>tel. ' . $tel . '</h4>';
  }

  if ($fax) {
    $html .= 'faks ' . $fax;
  }

  return $html;
}
add_shortcode('post_dl_tel', 'post_dl_tel_shortcode');

function post_dl_emailwww_shortcode()
{
  /*
	<h4>E-mail: <a href="mailto:[acf field=dl_email]">[acf field="dl_email"]</a></h4>
	<p><a href="http://[acf field=dl_www]" target="_blank" rel="noopener noreferrer">[acf field="dl_www"]</a></p>
  */
  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $email  = get_field('dl_email', 'post_' . $post_id);
  $www  = get_field('dl_www', 'post_' . $post_id);
  $html  = '';

  if ($email) {
    $html .= '<h4>E-mail: <a href="mailto:' . $email . '">' . $email . '</a></h4> ';
  }

  if ($www) {
    if (substr($www, 0, 4) != 'http') {
      $www_link = 'http://' . $www;
    } elseif (substr($www, 0, 5) == 'https') {
      $www_link = $www;
      $www = substr($www, 8);
    } else {
      $www_link = $www;
      $www = substr($www, 7);
    }
    $html .= '<p><a href="' . $www_link . '" target="_blank" rel="noopener noreferrer">' . $www . '</a></p> ';
  }

  return $html;
}
add_shortcode('post_dl_email_www', 'post_dl_emailwww_shortcode');

function post_dl_address_shortcode()
{
  /*
	<h4>[acf field="dl_adres"]</h4>
	<h4>[acf field="dl_kod_pocztowy"] [acf field="dl_miasto"]</h4>
	<p>województwo [acf field="dl_wojewodztwo"]</p>
  */

  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $html  = '<h4>' . get_field('dl_adres', 'post_' . $post_id) . '</h4> <h4>' . get_field('dl_kod_pocztowy', 'post_' . $post_id) . ' ' . get_field('dl_miasto', 'post_' . $post_id) . '</h4> <p>województwo ' . get_field('dl_wojewodztwo', 'post_' . $post_id) . '</p>';

  return $html;
}
add_shortcode('post_dl_address', 'post_dl_address_shortcode');

function post_dl_table_shortcode($atts = [], $content = null, $tag = '')
{

  $atts = array_change_key_case((array) $atts, CASE_LOWER);

  $dl_atts = shortcode_atts(['field' => '', 'value' => ''], $atts, $tag);
  // [acf field="dl_produkty_serwis"]
  $results = explode(', ', do_shortcode('[acf field="' . $dl_atts['field'] . '"]'));

  if (in_array($dl_atts['value'], $results)) {
    $html = '<span class="pp-icon icon-circle_full_check" style="color: #44c400;"> </span>';
  } else {
    $html = '<span class="fas fa-times-circle" style="color: #cccccc;"> </span>';
  }

  return ($html);
}

function post_dl_table_init()
{
  add_shortcode('post_dl_table', 'post_dl_table_shortcode');
}

add_action('init', 'post_dl_table_init');

function excerpt_br_shortcode()
{
  switch_to_blog(4);
  $content  = '[acf field="br_adres"]<br/>
	[acf field="br_kod_pocztowy"] [acf field="br_miasto"]<br/>
	województwo [acf field="br_wojewodztwo"]<br/>';
  $tel    = do_shortcode('[acf field="br_telefon"]');
  $fax    = do_shortcode('[acf field="br_fax"]');
  $email    = do_shortcode('[acf field="br_email"]');
  $www    = do_shortcode('[acf field="br_www"]');

  $html = do_shortcode($content);

  if ($tel) {
    $html .= 'tel. ' . $tel . '<br/>';
  }

  if ($fax) {
    $html .= 'faks ' . $fax . '<br/>';
  }

  if ($email) {
    $html .= '<a href="mailto:' . $email . '">adres e-mail</a>';
  }

  if ($www) {
    if ($email) {
      $html .= ' | ';
    }
    if (substr($www, 0, 4) != 'http') {
      $www = 'http://' . $www;
    }
    $html .= '<a href="' . $www . '" target="_blank" rel="noopener noreferrer">strona www</a>';
  }
  restore_current_blog();

  return $html;
}
add_shortcode('excerpt_br', 'excerpt_br_shortcode');

function map_address_br_shortcode()
{
  $address = urlencode(do_shortcode('[acf field="br_adres"]+[acf field="br_kod_pocztowy"]+[acf field="br_miasto"]'));

  return '<iframe src="https://maps.google.com/maps?q=' . $address . '&iwloc=near&output=embed" style="border:0;width:100%;" height="300" frameborder="0"></iframe>';
}
add_shortcode('map_address_br', 'map_address_br_shortcode');

function excerpt_dl_shortcode()
{
  switch_to_blog(3);
  $badges    = [
    ['title' => 'dystrybutor', 'url' => '/wp-content/uploads/2019/07/DYS-1.png'],
    ['title' => 'autoryzowany serwis wapro B2C', 'url' => '/wp-content/uploads/2019/07/ASA-1.png'],
    ['title' => 'autoryzowane centrum serwisowe', 'url' => '/wp-content/uploads/2019/08/ASC-1.png'],
    ['title' => 'autoryzowane centrum szkoleniowe', 'url' => '/wp-content/uploads/2019/08/ACS-1.png'],
    ['title' => 'autoryzowany serwis', 'url' => '/wp-content/uploads/2019/08/AS-1.png'],
    ['title' => 'złoty partner', 'url' => '/wp-content/uploads/2019/08/PZ-1.png'],
    ['title' => 'srebrny partner', 'url' => '/wp-content/uploads/2019/08/PS-1.png'],
    ['title' => 'brązowy partner', 'url' => '/wp-content/uploads/2019/08/PB-1.png'],
    ['title' => 'punkt sprzedaży', 'url' => '/wp-content/uploads/2019/08/POS-1.png'],
    ['title' => 'złoty dealer', 'url' => '/wp-content/uploads/2019/08/DZ-1.png'],
    ['title' => 'srebrny dealer', 'url' => '/wp-content/uploads/2019/08/DS-1.png'],
    ['title' => 'brązowy dealer', 'url' => '/wp-content/uploads/2019/08/DB-1.png']
  ];

  $content  = '[acf field="dl_adres"]<br/>
	[acf field="dl_kod_pocztowy"] [acf field="dl_miasto"]<br/>
	województwo [acf field="dl_wojewodztwo"]<br/>';
  $tel    = do_shortcode('[acf field="dl_telefon"]');
  $fax    = do_shortcode('[acf field="dl_fax"]');
  $email    = do_shortcode('[acf field="dl_email"]');
  $www    = do_shortcode('[acf field="dl_www"]');

  $html = do_shortcode($content);

  if ($tel) {
    $html .= 'tel. ' . $tel . '<br/>';
  }

  if ($fax) {
    $html .= 'faks ' . $fax . '<br/>';
  }

  if ($email) {
    $html .= '<a href="mailto:' . $email . '">adres e-mail</a>';
  }

  if ($www) {
    if ($email) {
      $html .= ' | ';
    }
    if (substr($www, 0, 4) != 'http') {
      $www = 'http://' . $www;
    }
    $html .= '<a href="' . $www . '" target="_blank" rel="noopener noreferrer">strona www</a>';
  }

  $etykiety = explode(', ', do_shortcode('[acf field="dl_etykieta"]'));

  if (count($etykiety)) {
    $html .= '<br/>';
  }

  foreach ($badges as $badge) {
    if (in_array($badge['title'], $etykiety)) {
      $html .= '<div style="width:60%;padding-top:5px"><img src="' . $badge['url'] . '" alt="' . $badge['title'] . '" height="30px" border="0" align="middle" /></div>';
    }
  }
  restore_current_blog();

  return $html;
}
add_shortcode('excerpt_dl', 'excerpt_dl_shortcode');

function map_address_dl_shortcode()
{
  $address = urlencode(do_shortcode('[acf field="dl_adres"]+[acf field="dl_kod_pocztowy"]+[acf field="dl_miasto"]'));

  return '<iframe src="https://maps.google.com/maps?q=' . $address . '&iwloc=near&output=embed" style="border:0;width:100%;" height="300" frameborder="0"></iframe>';
}
add_shortcode('map_address_dl', 'map_address_dl_shortcode');

function map_obszar_br_shortcode()
{
  $voivodeships = [
    ['id' => 'pl2', 'class' => 'pl1', 'url' => 'dolnoslaskie', 'title' => 'dolnośląskie'],
    ['id' => 'pl3', 'class' => 'pl2', 'url' => 'kujawsko-pomorskie', 'title' => 'kujawsko-pomorskie'],
    ['id' => 'pl4', 'class' => 'pl3', 'url' => 'lubelskie', 'title' => 'lubelskie'],
    ['id' => 'pl5', 'class' => 'pl4', 'url' => 'lubuskie', 'title' => 'lubuskie'],
    ['id' => 'pl15', 'class' => 'pl5', 'url' => 'lodzkie', 'title' => 'łódzkie'],
    ['id' => 'pl7', 'class' => 'pl6', 'url' => 'malopolskie', 'title' => 'małopolskie'],
    ['id' => 'pl6', 'class' => 'pl7', 'url' => 'mazowieckie', 'title' => 'mazowieckie'],
    ['id' => 'pl8', 'class' => 'pl8', 'url' => 'opolskie', 'title' => 'opolskie'],
    ['id' => 'pl9', 'class' => 'pl9', 'url' => 'podkarpackie', 'title' => 'podkarpackie'],
    ['id' => 'pl10', 'class' => 'pl10', 'url' => 'podlaskie', 'title' => 'podlaskie'],
    ['id' => 'pl11', 'class' => 'pl11', 'url' => 'pomorskie', 'title' => 'pomorskie'],
    ['id' => 'pl16', 'class' => 'pl12', 'url' => 'slaskie', 'title' => 'śląskie'],
    ['id' => 'pl17', 'class' => 'pl13', 'url' => 'swietokrzyskie', 'title' => 'świętokrzyskie'],
    ['id' => 'pl12', 'class' => 'pl14', 'url' => 'warminsko-mazurskie', 'title' => 'warmińsko-mazurskie'],
    ['id' => 'pl13', 'class' => 'pl15', 'url' => 'wielkopolskie', 'title' => 'wielkopolskie'],
    ['id' => 'pl14', 'class' => 'pl16', 'url' => 'zachodniopomorskie', 'title' => 'zachodniopomorskie']
  ];

  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $obszar = get_field('br_obszar_dzialania', 'post_' . $post_id);

  if (!is_array($obszar)) {
    $obszar[0] = $obszar;
  }

  $html = '<ul class="poland">';

  foreach ($voivodeships as $voivodeship) {
    $html .= '<li id="' . $voivodeship['id'] . '" class="' . $voivodeship['class'];

    if (in_array($voivodeship['title'], $obszar)) {
      $html .= ' active-region';
    }

    $html .= '"><a href="#' . $voivodeship['url'] . '" title="' . $voivodeship['title'] . '">' . $voivodeship['title'] . ' <span class="bg"></span></a></li>';
  }

  $html .= '</ul>';

  return $html;
}
add_shortcode('map_obszar_br', 'map_obszar_br_shortcode');

function map_obszar_dl_shortcode()
{
  $voivodeships = [
    ['id' => 'pl2', 'class' => 'pl1', 'url' => 'dolnoslaskie', 'title' => 'dolnośląskie'],
    ['id' => 'pl3', 'class' => 'pl2', 'url' => 'kujawsko-pomorskie', 'title' => 'kujawsko-pomorskie'],
    ['id' => 'pl4', 'class' => 'pl3', 'url' => 'lubelskie', 'title' => 'lubelskie'],
    ['id' => 'pl5', 'class' => 'pl4', 'url' => 'lubuskie', 'title' => 'lubuskie'],
    ['id' => 'pl15', 'class' => 'pl5', 'url' => 'lodzkie', 'title' => 'łódzkie'],
    ['id' => 'pl7', 'class' => 'pl6', 'url' => 'malopolskie', 'title' => 'małopolskie'],
    ['id' => 'pl6', 'class' => 'pl7', 'url' => 'mazowieckie', 'title' => 'mazowieckie'],
    ['id' => 'pl8', 'class' => 'pl8', 'url' => 'opolskie', 'title' => 'opolskie'],
    ['id' => 'pl9', 'class' => 'pl9', 'url' => 'podkarpackie', 'title' => 'podkarpackie'],
    ['id' => 'pl10', 'class' => 'pl10', 'url' => 'podlaskie', 'title' => 'podlaskie'],
    ['id' => 'pl11', 'class' => 'pl11', 'url' => 'pomorskie', 'title' => 'pomorskie'],
    ['id' => 'pl16', 'class' => 'pl12', 'url' => 'slaskie', 'title' => 'śląskie'],
    ['id' => 'pl17', 'class' => 'pl13', 'url' => 'swietokrzyskie', 'title' => 'świętokrzyskie'],
    ['id' => 'pl12', 'class' => 'pl14', 'url' => 'warminsko-mazurskie', 'title' => 'warmińsko-mazurskie'],
    ['id' => 'pl13', 'class' => 'pl15', 'url' => 'wielkopolskie', 'title' => 'wielkopolskie'],
    ['id' => 'pl14', 'class' => 'pl16', 'url' => 'zachodniopomorskie', 'title' => 'zachodniopomorskie']
  ];

  if (array_key_exists('loc', $_GET)) {
    $post_id = intval($_GET['loc']);
  } else {
    $post_id = get_the_ID();
  }

  $obszar = get_field('dl_obszar_dzialania', 'post_' . $post_id);

  if (!is_array($obszar)) {
    $obszar[0] = $obszar;
  }

  $html = '<ul class="poland">';

  foreach ($voivodeships as $voivodeship) {
    $html .= '<li id="' . $voivodeship['id'] . '" class="' . $voivodeship['class'];

    if (in_array($voivodeship['title'], $obszar)) {
      $html .= ' active-region';
    }

    $html .= '"><a href="#' . $voivodeship['url'] . '" title="' . $voivodeship['title'] . '">' . $voivodeship['title'] . ' <span class="bg"></span></a></li>';
  }

  $html .= '</ul>';

  return $html;
}
add_shortcode('map_obszar_dl', 'map_obszar_dl_shortcode');

function badges_dl_shortcode()
{
  $badges    = [
    ['title' => 'dystrybutor', 'url' => '/wp-content/uploads/2019/07/DYS-1.png'],
    ['title' => 'autoryzowany serwis wapro B2C', 'url' => '/wp-content/uploads/2019/07/ASA-1.png'],
    ['title' => 'autoryzowane centrum serwisowe', 'url' => '/wp-content/uploads/2019/08/ASC-1.png'],
    ['title' => 'autoryzowane centrum szkoleniowe', 'url' => '/wp-content/uploads/2019/08/ACS-1.png'],
    ['title' => 'autoryzowany serwis', 'url' => '/wp-content/uploads/2019/08/AS-1.png'],
    ['title' => 'złoty partner', 'url' => '/wp-content/uploads/2019/08/PZ-1.png'],
    ['title' => 'srebrny partner', 'url' => '/wp-content/uploads/2019/08/PS-1.png'],
    ['title' => 'brązowy partner', 'url' => '/wp-content/uploads/2019/08/PB-1.png'],
    ['title' => 'punkt sprzedaży', 'url' => '/wp-content/uploads/2019/08/POS-1.png'],
    ['title' => 'złoty dealer', 'url' => '/wp-content/uploads/2019/08/DZ-1.png'],
    ['title' => 'srebrny dealer', 'url' => '/wp-content/uploads/2019/08/DS-1.png'],
    ['title' => 'brązowy dealer', 'url' => '/wp-content/uploads/2019/08/DB-1.png']
  ];
  $html    = '';

  $etykiety  = explode(', ', do_shortcode('[acf field="dl_etykieta"]'));

  foreach ($badges as $badge) {
    if (in_array($badge['title'], $etykiety)) {
      $html .= '<img src="' . $badge['url'] . '" alt="' . $badge['title'] . '" border="0" align="middle" style="width: 212px;margin-right: 20px;" />';
    }
  }

  return $html;
}
add_shortcode('badges_dl', 'badges_dl_shortcode');

function show_loggedin_function($atts)
{
  global $current_user, $user_login;
  $current_user = wp_get_current_user();
  add_filter('widget_text', 'do_shortcode');

  if ($user_login)
    return $current_user->display_name;
}
add_shortcode('show_loggedin_as', 'show_loggedin_function');

add_filter('wpcf7_validate_number*', 'custom_online_number_validation_filter', 20, 2);

function custom_online_number_validation_filter($result, $tag)
{
  $tags = [
    'number-mag', 'number-mag-biznes', 'number-fakir', 'number-kaper', 'number-gang', 'number-best',
    'number-aukcje', 'number-analizy', 'number-mobile', 'number-jpk-biznes', 'number-jpk'
  ];

  if (in_array($tag->name, $tags)) {
    $sum = 0;

    foreach ($tags as $item) {
      $sum += intval($_POST[$item]);
    }

    if (isset($_POST['posiada-online'])) {
      $sum++;
    }

    if ($sum <= 0) {
      $result->invalidate($tag, "Proszę wybrać conajmniej jeden program lub zaznaczyć 'Mam już usługę WAPRO Online'!");
    }

    if (
      !isset($_POST['posiada-online']) and intval($_POST['number-jpk-biznes']) > 0 and intval($_POST['number-mag-biznes']) == 0 and
      intval($_POST['number-fakir']) == 0 and intval($_POST['number-kaper']) == 0 and intval($_POST['number-mag']) == 0
    ) {
      $result->invalidate($tag, "Jeżeli wybrałeś WAPRO JPK musisz zaznaczyć WAPRO Mag, WAPRO Fakir lub WAPRO Kaper bądź zaznaczyć Mam już WAPRO Online jeżeli posiadasz wykupiona usługę.");
    }

    if (
      !isset($_POST['posiada-online']) and intval($_POST['number-jpk']) > 0 and intval($_POST['number-mag-biznes']) == 0 and
      intval($_POST['number-fakir']) == 0 and intval($_POST['number-kaper']) == 0 and intval($_POST['number-mag']) == 0
    ) {
      $result->invalidate($tag, "Jeżeli wybrałeś WAPRO JPK Biuro musisz zaznaczyć WAPRO Mag, WAPRO Fakir lub WAPRO Kaper bądź zaznaczyć Mam już WAPRO Online jeżeli posiadasz wykupiona usługę.");
    }

    if (intval($_POST['number-jpk']) > 0 and intval($_POST['number-jpk-biznes']) > 0) {
      $result->invalidate($tag, "Jeżeli zaznaczyłeś WAPRO JPK Biznes to nie możesz zaznaczyć WAPRO JPK Biuro.");
    }

    if (intval($_POST['number-mag']) > 0 and intval($_POST['number-mag-biznes']) > 0) {
      $result->invalidate($tag, "Jeżeli zaznaczyłeś WAPRO Mag Biznes to nie możesz zaznaczyć WAPRO Mag.");
    }
  }

  return $result;
}

add_filter('wpcf7_validate_acceptance', 'custom_online_acceptance_validation_filter', 20, 2);

function custom_online_acceptance_validation_filter($result, $tag)
{
  if ($tag->name == 'zgoda-rodo') {
    if (!isset($_POST['zgoda-rodo'])) {
      $result->invalidate($tag, "Wyrażenie zgody jest wymagane.");
    }
  }

  if ($tag->name == 'zgoda-1') {
    if (!isset($_POST['zgoda-1'])) {
      $result->invalidate($tag, "Wyrażenie zgody jest wymagane.");
    }
  }

  if ($tag->name == 'zgoda-2') {
    if (!isset($_POST['zgoda-2'])) {
      $result->invalidate($tag, "Wyrażenie zgody jest wymagane.");
    }
  }

  return $result;
}

add_filter('wpcf7_validate_select*', 'custom_archive_select_validation_filter', 20, 2);

function custom_archive_select_validation_filter($result, $tag)
{
  if ($tag->name == 'program') {
    if ($_POST[$tag->name] == 'wybierz program') {
      $result->invalidate($tag, "Proszę wybrać program!");
    }
  } elseif ($tag->name == 'sql') {
    if ($_POST[$tag->name] == 'wybierz wersję SQL') {
      $result->invalidate($tag, "Proszę wybrać wersję SQL!");
    }
  } else {
    $programy = [
      ['name' => 'program_version_aukcje', 'title' => 'WAPRO Aukcje'],
      ['name' => 'program_version_analizy', 'title' => 'WAPRO Analizy'],
      ['name' => 'program_version_best', 'title' => 'WAPRO Best'],
      ['name' => 'program_version_fakir', 'title' => 'WAPRO Fakir'],
      ['name' => 'program_version_fakturka', 'title' => 'WAPRO Fakturka'],
      ['name' => 'program_version_gang', 'title' => 'WAPRO Gang'],
      ['name' => 'program_version_jpk', 'title' => 'WAPRO JPK'],
      ['name' => 'program_version_kaper', 'title' => 'WAPRO kaper'],
      ['name' => 'program_version_mag', 'title' => 'WAPRO mag'],
      ['name' => 'program_version_mobile', 'title' => 'WAPRO Mobile'],
      ['name' => 'program_version_mobile_android', 'title' => 'WAPRO Mobile Android'],
      ['name' => 'program_version_wf_kaper_dos', 'title' => 'WF-KaPeR DOS'],
      ['name' => 'program_version_wf_mag_dos', 'title' => 'WF-MAG DOS'],
      ['name' => 'program_version_wf_fakir_dos', 'title' => 'WF-FaKir DOS']
    ];

    foreach ($programy as $key => $value) {
      if ($tag->name == $value['name'] and $_POST['program'] == $value['title']) {
        if ($_POST[$tag->name] == 'wybierz numer wersji') {
          $result->invalidate($tag, "Proszę wybrać wersję programu!");
        }
      }
    }
  }

  return $result;
}

add_action("wpcf7_posted_data", "wpcf7_modify_this");

function wpcf7_modify_this($posted_data)
{
  if ($_POST['_wpcf7'] == '52001' or $_POST['_wpcf7'] == '35288') {
    $posted_data['abonament'] = 0;
    $sum1                     = 0;
    $sum2                     = 0;

    $products_norm    = ['mag', 'fakir', 'kaper', 'gang', 'best', 'aukcje', 'analizy', 'mobile', 'jpk'];
    $products_biznes  = ['mag'];

    foreach ($products_norm as $product) {
      $sum1 += intval($posted_data['number-' . $product]);
    }

    foreach ($products_biznes as $product) {
      $sum2 += intval($posted_data['number-' . $product . '-biznes']);
    }

    $posted_data['abonament'] = ($sum1 * 159) + ($sum2 * 129);

    if (array_key_exists('posiada-online', $posted_data)) {
      if ($posted_data['posiada-online'][0] == "") {
        $posted_data['posiada-online'][0] = "Nie";
      } else {
        $posted_data['posiada-online'][0] = "Tak";
      }
    }

    if (array_key_exists('checkbox-serwis-biznes', $posted_data)) {
      if ($posted_data['checkbox-serwis-biznes'][0] != "") {
        $posted_data['checkbox-serwis-biznes'][0] = "wariant Biznes";
        $posted_data['abonament'] += 549;
      }
    }

    if (array_key_exists('checkbox-serwis-prestiz', $posted_data)) {
      if ($posted_data['checkbox-serwis-prestiz'][0] != "") {
        $posted_data['checkbox-serwis-prestiz'][0] = "wariant Prestiż";
        $posted_data['abonament'] += 699;
      }
    }

    if (array_key_exists('checkbox-backup-podst', $posted_data)) {
      if ($posted_data['checkbox-backup-podst'][0] != "") {
        $posted_data['checkbox-backup-podst'][0] = "wariant Podstawowy";
        $posted_data['abonament'] += 49;
      }
    }

    if (array_key_exists('checkbox-backup-rozsz', $posted_data)) {
      if ($posted_data['checkbox-backup-rozsz'][0] != "") {
        $posted_data['checkbox-backup-rozsz'][0] = "wariant Rozszerzony";
        $posted_data['abonament'] += 99;
      }
    }
  }

  return $posted_data;
}

add_action('check_admin_referer', 'logout_without_confirm', 10, 2);

function logout_without_confirm($action, $result)
{
  /**
   * Allow logout without confirmation
   */
  if ($action == "log-out" && !isset($_GET['_wpnonce'])) {
    $redirect_to = isset($_REQUEST['redirect_to']) ? $_REQUEST['redirect_to'] : 'url-you-want-to-redirect';
    $location = str_replace('&amp;', '&', wp_logout_url($redirect_to));
    header("Location: $location");
    die;
  }
}

add_action('login_enqueue_scripts', 'style_login_page', 10);

function style_login_page()
{
  wp_enqueue_style('core', get_template_directory_uri() . '/custom/login.css', false, '20190928001');
}

add_filter('wpcf7_validate_tel*', 'custom_archive_tel_validation_filter', 20, 2);

function custom_archive_tel_validation_filter($result, $tag)
{
  if (!ctype_digit($_POST[$tag->name])) {
    $result->invalidate($tag, "Numer telefonu może zawierać tylko cyfry!");
  }

  return $result;
}

add_filter('wpcf7_validate_tel', 'custom_tel_validation_filter', 20, 2);

function custom_tel_validation_filter($result, $tag)
{
  if (trim($_POST[$tag->name]) != '') {
    if (!ctype_digit($_POST[$tag->name])) {
      $result->invalidate($tag, "Numer telefonu może zawierać tylko cyfry!");
    }
  }

  return $result;
}

add_filter('wpcf7_validate_text*', 'custom_archive_text_validation_filter', 20, 2);

function custom_archive_text_validation_filter($result, $tag)
{
  if ($tag->name == 'your-nip-register' or $tag->name == 'NIP' or $tag->name == 'yl-nip' or $tag->name == 'numbernip') {

    global $badNIPs;
    //$nip = '7171642051';
    $nip = preg_replace('/\s+/', '', str_replace('-', '', strip_tags($_POST[$tag->name])));
    $nip_eu = 'PL' . $nip;

    if (!in_array($nip, $badNIPs)) {
      if (!validateNip($nip)) {
        $result->invalidate($tag, 'NIP jest niepoprawny!');
        return $result;
      }

      require_once 'custom/NIP24/NIP24Client.php';

      \NIP24\NIP24Client::registerAutoloader();

      $nip24 = new \NIP24\NIP24Client('wRocgSXQIItj', '2PEXnwYwCwVA');

      // Sprawdzenie stanu konta
      $account = $nip24->getAccountStatus();

      if (!$account) {
        $result->invalidate($tag, $nip24->getLastError());
      } else {
        // Wywołanie metody zwracającej szczegółowe dane firmy
        $all = $nip24->getAllDataExt(\NIP24\Number::NIP, $nip, false);

        if (!$all) {
          if (strpos($nip24->getLastError(), 'Dane pobrane z serwisu REGON są niekompletne') === false) {
            $result->invalidate($tag, $nip24->getLastError());
          } else {
            //$url = 'https://mcl.assecobs.pl/ERP_Service/services_integration_api/ApiWebService.ashx?wsdl&DBC=ABS_TEST';
            $url = 'https://mcl.assecobs.pl/ERP_Service_Prod/services_integration_api/ApiWebService.ashx?wsdl&dbc=ABS_PROD';

            $client = new SoapClient($url, array("trace" => 1, "exception" => 0));

            $paramsCustomer     = array('ArrayCustomerGetData' => array('CustomerGetData' => array('NIPSameCyfry' => $nip)));
            $responseCustomer   = $client->CUSTOMERGET($paramsCustomer);

            if ($responseCustomer->ArrayCustomerGetResult->Status != '1') {
              $result->invalidate($tag, 'Niepoprawny NIP!');
            }
          }
        }
      }
    }
  }

  if (array_key_exists('user-exist', $_POST)) {
    $userExist = intval($_POST['user-exist']);
  } else {
    $userExist = 0;
  }

  if ($tag->name == 'your-login-admin') {
    if (username_exists($_POST['your-login-admin']) && $userExist == 0) {
      $user   = get_user_by('login', $_POST['your-login-admin']);
      $roles  = (array) $user->roles;
      if (in_array('subscriber', $roles) || in_array('registered', $roles)) {
        $result->invalidate($tag, "Użytkownik o podanej nazwie juz istnieje w systemie!");
      } else {
        $result->invalidate($tag, "Użytkownik o podanej nazwie juz istnieje w systemie! Jezeli chcesz dodać nową rolę do tego użytkownika, zaloguj się i wypełnij ten formularz jeszcze raz.");
      }
    } elseif (email_exists($_POST['your-login-admin']) && $userExist == 0) {
      $user   = get_user_by('email', $_POST['your-login-admin']);
      $roles  = (array) $user->roles;
      if (in_array('subscriber', $roles) || in_array('registered', $roles)) {
        $result->invalidate($tag, "Użytkownik o podanej nazwie juz istnieje w systemie!");
      } else {
        $result->invalidate($tag, "Użytkownik o podanej nazwie juz istnieje w systemie! Jezeli chcesz dodać nową rolę do tego użytkownika, zaloguj się i wypełnij ten formularz jeszcze raz.");
      }
    }
  }

  if ($tag->name == 'your-login-email-admin') {
    if (!username_exists($_POST['your-login-email-admin']) && !email_exists($_POST['your-login-email-admin'])) {
      $result->invalidate($tag, "Użytkownik o podanej nazwie/adresie e-mail nie istnieje w systemie!");
    }
  }

  return $result;
}

add_filter('wpcf7_validate_text', 'custom_text_validation_filter', 20, 2);

function custom_text_validation_filter($result, $tag)
{
  if ($tag->name == 'partner-NIP' or $tag->name == 'biuro-NIP' or $tag->name == 'numbernip') {

    global $badNIPs;
    $nip = preg_replace('/\s+/', '', str_replace('-', '', strip_tags($_POST[$tag->name])));
    $nip_eu = 'PL' . $nip;

    if (!in_array($nip, $badNIPs)) {
      require_once 'custom/NIP24/NIP24Client.php';

      \NIP24\NIP24Client::registerAutoloader();

      $nip24 = new \NIP24\NIP24Client('wRocgSXQIItj', '2PEXnwYwCwVA');

      if (!empty($nip)) {
        $account = $nip24->getAccountStatus();

        if (!$account) {
          $result->invalidate($tag, $nip24->getLastError());
        } else {
          // Wywołanie metody zwracającej szczegółowe dane firmy
          $all = $nip24->getAllDataExt(\NIP24\Number::NIP, $nip, false);

          if (!$all) {
            if (strpos($nip24->getLastError(), 'Dane pobrane z serwisu REGON są niekompletne') === false) {
              $result->invalidate($tag, $nip24->getLastError());
            } else {
              //$url = 'https://mcl.assecobs.pl/ERP_Service/services_integration_api/ApiWebService.ashx?wsdl&DBC=ABS_TEST';
              $url = 'https://mcl.assecobs.pl/ERP_Service_Prod/services_integration_api/ApiWebService.ashx?wsdl&dbc=ABS_PROD';

              $client = new SoapClient($url, array("trace" => 1, "exception" => 0));

              $paramsCustomer     = array('ArrayCustomerGetData' => array('CustomerGetData' => array('NIPSameCyfry' => $nip)));
              $responseCustomer   = $client->CUSTOMERGET($paramsCustomer);

              if ($responseCustomer->ArrayCustomerGetResult->Status != '1') {
                $result->invalidate($tag, 'Niepoprawny NIP!');
              }
            }
          }
        }
      }
    }
  }

  if (($tag->name == 'adm-imie' || $tag->name == 'adm-nazwisko') && (isset($_POST['checkbox-serwis-biznes']) || isset($_POST['checkbox-serwis-prestiz']))) {
    if ($_POST[$tag->name] == '') {
      $result->invalidate($tag, "Proszę wypełnić wszystkie wymagane pola!");
    }
  }

  return $result;
}

add_filter('wpcf7_validate_email*', 'custom_archive_email_validation_filter', 20, 2);

function custom_archive_email_validation_filter($result, $tag)
{
  if (array_key_exists('user-exist', $_POST)) {
    $userExist = intval($_POST['user-exist']);
  } else {
    $userExist = 0;
  }

  if ($tag->name == 'email-admin') {
    if (email_exists($_POST['email-admin']) && $userExist == 0) {
      $user   = get_user_by('email', $_POST['email-admin']);
      $roles  = (array) $user->roles;
      if (in_array('subscriber', $roles) || in_array('registered', $roles)) {
        $result->invalidate($tag, "Użytkownik o podanej adresie e-mail juz istnieje w systemie!");
      } else {
        $result->invalidate($tag, "Użytkownik o podanej adresie e-mail juz istnieje w systemie! Jezeli chcesz dodać nową rolę do tego użytkownika, zaloguj się i wypełnij ten formularz jeszcze raz.");
      }
    } elseif (username_exists($_POST['email-admin']) && $userExist == 0) {
      $user   = get_user_by('login', $_POST['email-admin']);
      $roles  = (array) $user->roles;
      if (in_array('subscriber', $roles) || in_array('registered', $roles)) {
        $result->invalidate($tag, "Użytkownik o podanej adresie e-mail juz istnieje w systemie!");
      } else {
        $result->invalidate($tag, "Użytkownik o podanej adresie e-mail juz istnieje w systemie! Jezeli chcesz dodać nową rolę do tego użytkownika, zaloguj się i wypełnij ten formularz jeszcze raz.");
      }
    }
  }

  return $result;
}

add_filter('wpcf7_validate_email', 'custom_email_validation_filter', 20, 2);

function custom_email_validation_filter($result, $tag)
{
  if ($_POST['_wpcf7'] == '35288' or $_POST['_wpcf7'] == '52001') {
    if ($tag->name == 'partner-email') {
      if (($_POST['partner-email'] != '' || $_POST['partner-NIP'] != '') && ($_POST['biuro-email'] != '' && $_POST['biuro-NIP'] != '')) {
        $result->invalidate($tag, "Niedozwolone jest podanie danych biura i partnera.");
      }

      if (($_POST['partner-email'] == '' || $_POST['partner-NIP'] == '') && ($_POST['partner-email'] != '' || $_POST['partner-NIP'] != '')) {
        $result->invalidate($tag, "Konieczne jest podanie NIP-u oraz adresu e-mail partnera.");
      }
    }

    if ($tag->name == 'biuro-email') {
      if (($_POST['partner-email'] != '' && $_POST['partner-NIP'] != '') && ($_POST['biuro-email'] != '' || $_POST['biuro-NIP'] != '')) {
        $result->invalidate($tag, "Niedozwolone jest podanie danych biura i partnera.");
      }

      if (($_POST['biuro-email'] == '' || $_POST['biuro-NIP'] == '') && ($_POST['biuro-email'] != '' || $_POST['biuro-NIP'] != '')) {
        $result->invalidate($tag, "Konieczne jest podanie NIP-u oraz adresu e-mail biura.");
      }
    }
  }

  if ($tag->name == 'adm-e-mail' && (isset($_POST['checkbox-serwis-biznes']) || isset($_POST['checkbox-serwis-prestiz']))) {
    if ($_POST[$tag->name] == '') {
      $result->invalidate($tag, "Proszę wypełnić wszystkie wymagane pola!");
    }
  }

  return $result;
}

add_filter('wpcf7_validate_password*', 'custom_archive_password_validation_filter', 20, 2);

function custom_archive_password_validation_filter($result, $tag)
{
  if (array_key_exists('user-exist', $_POST)) {
    $userExist = intval($_POST['user-exist']);
  } else {
    $userExist = 0;
  }

  if ($tag->name == 'password') {
    if (strlen($_POST['password']) < 8 && $userExist == 0) {
      $result->invalidate($tag, "Hasło musi mieć minimum 8 znaków.");
    }
  }

  return $result;
}

add_filter('wpcf7_validate_checkbox', 'custom_archive_checkbox_validation_filter', 20, 2);

function custom_archive_checkbox_validation_filter($result, $tag)
{
  if ($tag->name == 'dl-produkty-szkolenie') {
    if (
      !isset($_POST['dl-produkty-sprzedaz']) &&
      !isset($_POST['dl-produkty-wdrozenie']) &&
      !isset($_POST['dl-produkty-serwis']) &&
      !isset($_POST['dl-produkty-szkolenie'])
    ) {
      $result->invalidate($tag, 'Proszę wybrać przynajmniej jedną opcję!');
    }
  }

  if ($_POST['_wpcf7'] == '46505') {
    if (
      $tag->name == 'demo-checkbox-mag' ||
      $tag->name == 'demo-checkbox-fakir' ||
      $tag->name == 'demo-checkbox-kaper' ||
      $tag->name == 'demo-checkbox-gang' ||
      $tag->name == 'demo-checkbox-best' ||
      $tag->name == 'demo-checkbox-fakturka' ||
      $tag->name == 'demo-checkbox-aukcje' ||
      $tag->name == 'demo-checkbox-mobile' ||
      $tag->name == 'demo-checkbox-analizy' ||
      $tag->name == 'demo-checkbox-ibusiness' ||
      $tag->name == 'demo-checkbox-b2c' ||
      $tag->name == 'demo-checkbox-b2b' ||
      $tag->name == 'demo-checkbox-br-online' ||
      $tag->name == 'demo-checkbox-jpk' ||
      $tag->name == 'demo-checkbox-ppk'
    ) {
      if (
        !isset($_POST['demo-checkbox-mag']) &&
        !isset($_POST['demo-checkbox-fakir']) &&
        !isset($_POST['demo-checkbox-kaper']) &&
        !isset($_POST['demo-checkbox-gang']) &&
        !isset($_POST['demo-checkbox-best']) &&
        !isset($_POST['demo-checkbox-fakturka']) &&
        !isset($_POST['demo-checkbox-aukcje']) &&
        !isset($_POST['demo-checkbox-mobile']) &&
        !isset($_POST['demo-checkbox-analizy']) &&
        !isset($_POST['demo-checkbox-ibusiness']) &&
        !isset($_POST['demo-checkbox-b2c']) &&
        !isset($_POST['demo-checkbox-b2b']) &&
        !isset($_POST['demo-checkbox-br-online']) &&
        !isset($_POST['demo-checkbox-jpk']) &&
        !isset($_POST['demo-checkbox-ppk'])
      ) {
        $result->invalidate($tag, '');
      }
    }
  }

  if ($_POST['_wpcf7'] == '45319' || $_POST['_wpcf7'] == '46148' || $_POST['_wpcf7'] == '46146' || $_POST['_wpcf7'] == '49603') {
    $checkboxTag    = false;
    $checkboxValue  = false;

    if (strpos($tag->name, 'checkbox-') !== false) $checkboxTag  = true;

    foreach ($_POST as $key => $value) {
      if (strpos($key, 'checkbox-') !== false) {
        $checkboxValue = true;
      }
    }

    if ($checkboxTag && !$checkboxValue) {
      $result->invalidate($tag, 'Proszę wybrać przynajmniej jedną opcję!');
    }
  }

  if ($_POST['_wpcf7'] == '45321') {
    if (
      $tag->name == 'checkbox-mag-podstawowe' ||
      $tag->name == 'checkbox-mobile-podstawowe' ||
      $tag->name == 'checkbox-fakir-podstawowe' ||
      $tag->name == 'checkbox-magik-podstawowe' ||
      $tag->name == 'checkbox-kaper-podstawowe' ||
      $tag->name == 'checkbox-gang-podstawowe' ||
      $tag->name == 'checkbox-best-podstawowe' ||
      $tag->name == 'checkbox-analizy-podstawowe' ||
      $tag->name == 'checkbox-ibusiness-podstawowe' ||
      $tag->name == 'checkbox-mag-zaawansowane-prestiz' ||
      $tag->name == 'checkbox-mag-zaawansowane-reporting' ||
      $tag->name == 'checkbox-gang-zaawansowane' ||
      $tag->name == 'checkbox-mag-autoryzacja' ||
      $tag->name == 'checkbox-fakir-autoryzacja' ||
      $tag->name == 'checkbox-b2c-autoryzacja'
    ) {
      if (
        !isset($_POST['checkbox-mag-podstawowe']) &&
        !isset($_POST['checkbox-mobile-podstawowe']) &&
        !isset($_POST['checkbox-fakir-podstawowe']) &&
        !isset($_POST['checkbox-magik-podstawowe']) &&
        !isset($_POST['checkbox-kaper-podstawowe']) &&
        !isset($_POST['checkbox-gang-podstawowe']) &&
        !isset($_POST['checkbox-best-podstawowe']) &&
        !isset($_POST['checkbox-analizy-podstawowe']) &&
        !isset($_POST['checkbox-ibusiness-podstawowe']) &&
        !isset($_POST['checkbox-mag-zaawansowane-prestiz']) &&
        !isset($_POST['checkbox-mag-zaawansowane-reporting']) &&
        !isset($_POST['checkbox-gang-zaawansowane']) &&
        !isset($_POST['checkbox-mag-autoryzacja']) &&
        !isset($_POST['checkbox-fakir-autoryzacja']) &&
        !isset($_POST['checkbox-b2c-autoryzacja'])
      ) {
        $result->invalidate($tag, 'Proszę wybrać przynajmniej jedną opcję!');
      }
    }
  }

  if ($tag->name == 'checkbox-serwis-biznes' || $tag->name == 'checkbox-serwis-prestiz') {
    if (
      (isset($_POST['checkbox-backup-podst']) ||
        isset($_POST['checkbox-backup-rozsz'])) &&
      !isset($_POST['checkbox-serwis-biznes']) &&
      !isset($_POST['checkbox-serwis-prestiz'])
    ) {
      $result->invalidate($tag, 'Proszę wybrać przynajmniej jeden serwer!');
    }
  }

  return $result;
}

add_action('wpcf7_mail_sent', 'after_sent_mail', 9);

/**
 * Everything which shlould be done after the cf7 will send an email.
 *
 * @param   object $cf7
 * @return  void
 */
function after_sent_mail($cf7)
{
  global $wpdb;

  error_log(date('Y-m-d H:i:s') . " functions: after_sent_mail \n", 3, '/home/wapro/www/wapro.pl/htdocs/logs/my-errors.log');

  // Run code after the email has been sent
  $wpcf7 = WPCF7_ContactForm::get_current();
  $submission = WPCF7_Submission::get_instance();

  if (array_key_exists('user-exist', $_POST)) {
    $userExist = intval($_POST['user-exist']);
  } else {
    $userExist = 0;
  }

  if ($submission) {
    //Below statement will return all data submitted by form.
    $data = $submission->get_posted_data();

    // error_log(date('Y-m-d H:i:s') . " _POST['_wpcf7']: " . $_POST['_wpcf7'] . "\n", 3, '/home/wapro/www/wapro.pl/htdocs/logs/my-errors.log');
    // error_log(date('Y-m-d H:i:s') . " data['_wpcf7']: " . $data['_wpcf7'] . "\n", 3, '/home/wapro/www/wapro.pl/htdocs/logs/my-errors.log');

    // Register dealer form
    if ($_POST['_wpcf7'] == '45267' or $_POST['_wpcf7'] == '46042') {

      if ($userExist == 0) {
        // Adding user
        $user_id = username_exists($data['your-login-admin']);

        if (!$user_id and email_exists($data['email-admin']) == false) {
          if (strlen($data['password']) < 2) {
            $data['password'] = randomPassword();
          }
          $user_id = wp_create_user($data['your-login-admin'], $data['password'], $data['email-admin']);
          update_user_meta($user_id, "first_name",  $data['your-name-admin']);
          update_user_meta($user_id, "last_name",  $data['your-lastname-admin']);

          $user = new \WP_User($user_id);
          $user->set_role('registered');

          $biura_id = get_blog_id_from_url("biura.wapro.pl");
          if ($biura_id) {
            add_user_to_blog($biura_id, $user_id, 'brakbiuro');
          }

          $wpdev_id = get_blog_id_from_url("wapro.pl");
          if ($wpdev_id) {
            add_user_to_blog($wpdev_id, $user_id, 'brak');
          }

          $pomoc_id = get_blog_id_from_url("pomoc.wapro.pl");
          if ($pomoc_id) {
            add_user_to_blog($pomoc_id, $user_id, 'subscriber');
          }
        } else {
          $user = new \WP_User($user_id);
          $user->set_role('registered');
        }
      } else {
        $user_id = $userExist;
        $user = new \WP_User($user_id);
        $user->set_role('registered');
      }

      // TODO: Modify user data (NIP, etc.)
      // NIP in the user data
      update_field('field_5dad6f08461cd', $data['your-nip-register'], 'user_' . $user_id);
      // Nazwa firmy in the user data
      update_field('field_5e74a3e979271', $data['your-company'], 'user_' . $user_id);

      if ($_POST['_wpcf7'] == '45267') {
        // Adding dealer localization
        // Add Post with dealer localization
        $post_id = 46627;
        $post = get_post($post_id);

        if (isset($post) && $post != null) {
          // new post data array
          $args = array(
            'comment_status' => $post->comment_status,
            'ping_status'    => $post->ping_status,
            'post_author'    => $post->post_author,
            'post_content'   => $post->post_content,
            'post_excerpt'   => $post->post_excerpt,
            'post_name'      => $post->post_name,
            'post_parent'    => $post->post_parent,
            'post_password'  => $post->post_password,
            'post_status'    => 'draft',
            'post_title'     => $data['your-company'],
            'post_type'      => $post->post_type,
            'to_ping'        => $post->to_ping,
            'menu_order'     => $post->menu_order
          );

          // Create new post
          $new_post_id = wp_insert_post($args);

          // UserID in the post data
          update_field('field_5d9dce5fc0656', $user_id, 'post_' . $new_post_id);

          $taxonomies = get_object_taxonomies($post->post_type); // returns array of taxonomy names for post type, ex array("category", "post_tag");
          foreach ($taxonomies as $taxonomy) {
            $post_terms = wp_get_object_terms($post_id, $taxonomy, array('fields' => 'slugs'));
            wp_set_object_terms($new_post_id, $post_terms, $taxonomy, false);
          }

          $post_meta_infos = $wpdb->get_results("SELECT meta_key, meta_value FROM $wpdb->postmeta WHERE post_id=$post_id");

          if (count($post_meta_infos) != 0) {
            $sql_query = "INSERT INTO $wpdb->postmeta (post_id, meta_key, meta_value) ";
            foreach ($post_meta_infos as $meta_info) {
              $meta_key = $meta_info->meta_key;
              if ($meta_key == '_wp_old_slug') continue;
              if ($meta_key == 'dl_adres') {
                $meta_value = addslashes($data['your-adres']);
              } elseif ($meta_key == 'dl_kod_pocztowy') {
                $meta_value = addslashes($data['your-code']);
              } elseif ($meta_key == 'dl_miasto') {
                $meta_value = addslashes($data['your-city']);
              } elseif ($meta_key == 'dl_wojewodztwo') {
                $meta_value = addslashes($data['wojewodztwo-partner'][0]);
              } elseif ($meta_key == 'dl_obszar_dzialania') {
                $json = 'a:' . count($data['dl-obszar-dzialania']) . ':{';
                $i = 0;
                foreach ($data['dl-obszar-dzialania'] as $item) {
                  $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                  $i++;
                }
                $data['dl-obszar-dzialania'] = $json . '}';
                $meta_value = addslashes($data['dl-obszar-dzialania']);
              } elseif ($meta_key == 'dl_telefon') {
                $meta_value = addslashes($data['telefon-partner']);
              } elseif ($meta_key == 'dl_fax') {
                $meta_value = addslashes($data['fax']);
              } elseif ($meta_key == 'dl_email') {
                $meta_value = addslashes($data['email-kontakt']);
              } elseif ($meta_key == 'dl_www') {
                $meta_value = addslashes($data['your-wwww']);
              } elseif ($meta_key == 'dl_produkty_serwis') {
                $json = 'a:' . count($data['dl-produkty-serwis']) . ':{';
                $i = 0;
                foreach ($data['dl-produkty-serwis'] as $item) {
                  $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                  $i++;
                }
                $data['dl-produkty-serwis'] = $json . '}';
                $meta_value = addslashes($data['dl-produkty-serwis']);
              } elseif ($meta_key == 'dl_produkty_sprzedaz') {
                $json = 'a:' . count($data['dl-produkty-sprzedaz']) . ':{';
                $i = 0;
                foreach ($data['dl-produkty-sprzedaz'] as $item) {
                  $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                  $i++;
                }
                $data['dl-produkty-sprzedaz'] = $json . '}';
                $meta_value = addslashes($data['dl-produkty-sprzedaz']);
              } elseif ($meta_key == 'dl_produkty_szkolenie') {
                $json = 'a:' . count($data['dl-produkty-szkolenie']) . ':{';
                $i = 0;
                foreach ($data['dl-produkty-szkolenie'] as $item) {
                  $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                  $i++;
                }
                $data['dl-produkty-szkolenie'] = $json . '}';
                $meta_value = addslashes($data['dl-produkty-szkolenie']);
              } elseif ($meta_key == 'dl_produkty_wdrozenie') {
                $json = 'a:' . count($data['dl-produkty-wdrozenie']) . ':{';
                $i = 0;
                foreach ($data['dl-produkty-wdrozenie'] as $item) {
                  $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                  $i++;
                }
                $data['dl-produkty-wdrozenie'] = $json . '}';
                $meta_value = addslashes($data['dl-produkty-wdrozenie']);
              } else {
                $meta_value = addslashes($meta_info->meta_value);
              }
              $sql_query_sel[] = "SELECT $new_post_id, '$meta_key', '$meta_value'";
              $wpdb->query($sql_query);
            }
            $sql_query .= implode(" UNION ALL ", $sql_query_sel);
            $wpdb->query($sql_query);
          }
        }
      }

      // Send information to ERP
      // TODO: Use webservices to send data to ERP???
    }

    // Register biuro form
    if ($_POST['_wpcf7'] == '46621' or $_POST['_wpcf7'] == '47731' or $_POST['_wpcf7'] == '46753') {

      if ($userExist == 0) {
        // Adding user
        $user_id = username_exists($data['your-login-admin']);

        if (!$user_id and email_exists($data['email-admin']) == false) {
          if (strlen($data['password']) < 2) {
            $data['password'] = randomPassword();
          }
          $user_id = wp_create_user($data['your-login-admin'], $data['password'], $data['email-admin']);
          update_user_meta($user_id, "first_name",  $data['your-name-admin']);
          update_user_meta($user_id, "last_name",  $data['your-lastname-admin']);

          $user = new \WP_User($user_id);
          $user->set_role('registeredbiuro');

          $dealer_id = get_blog_id_from_url("partnerzy.wapro.pl");
          if ($dealer_id) {
            add_user_to_blog($dealer_id, $user_id, 'brak');
          }

          $wpdev_id = get_blog_id_from_url("wapro.pl");
          if ($wpdev_id) {
            add_user_to_blog($wpdev_id, $user_id, 'brak');
          }

          $pomoc_id = get_blog_id_from_url("pomoc.wapro.pl");
          if ($pomoc_id) {
            add_user_to_blog($pomoc_id, $user_id, 'subscriber');
          }
        } else {
          $user = new \WP_User($user_id);
          $user->set_role('registeredbiuro');
        }
      } else {
        $user_id  = $userExist;
        $user     = new \WP_User($user_id);
        $roles    = (array) $user->roles;

        if (count($roles) == 0) {
          $user->set_role('registeredbiuro');
        } elseif ($roles[0] == 'brak') {
          $user->set_role('registeredbiuro');
        }
      }

      // NIP in the user data
      update_field('br_u_nip', $data['your-nip-register'], 'user_' . $user_id);
      // Nazwa firmy in the user data
      update_field('br_u_nazwa_firmy', $data['your-company'], 'user_' . $user_id);


      // Registration biuro & Edit Dane Firmy
      if ($_POST['_wpcf7'] == '46621' or $_POST['_wpcf7'] == '46753') {

        $dane_firmy = get_field('dane_firmy', 'user_' . $user_id);
        $lokalizacje = get_field('br_lokalizacje', 'user_' . $user_id);

        if (!is_object($dane_firmy) || intval($dane_firmy->ID) == 0) {
          $args = [
            'post_status'    => 'private',
            'post_title'     => $user_id . '. ' . $data['your-company'],
            'post_type'      => 'dane_firmy',
            'ping_status'    => 'closed'
          ];

          // Create new post
          $dane_firmy_id = wp_insert_post($args);
          update_field('dane_firmy', $dane_firmy_id, 'user_' . $user_id);
          unset($args);

          update_field('df_lokalizacje', $lokalizacje, 'post_' . $dane_firmy_id);
        } else {
          $dane_firmy_id = $dane_firmy->ID;

          // Get fields values
          if ($data['czy-testowy'][0]) {
            $testoweKontoNew = 'TAK';
          } else {
            $testoweKontoNew = 'NIE';
          }

          if (get_field('df_testowe_konto_parnera', 'post_' . $dane_firmy_id)) {
            $testoweKontoOld = 'TAK';
          } else {
            $testoweKontoOld = 'NIE';
          }

          // Send mail
          $subject = 'Zmiana danych firmy - Biuro rachunkowe';
          $headers[] = 'From: WAPRO ERP <kontakt@wapro.pl>';
          $headers[] = 'Reply-To: serwis.wapro@asscobs.pl';
          $headers[] = 'Content-Type: text/html; charset=UTF-8';
          $message = '<body bgcolor="#f7f5f5" style="background-color:#f7f5f5;">
            <table border="0" cellspacing="0" cellpadding="0" align="center" width="600" bgcolor="#fff" style="width:600px; background-color:#fff;">
              <tbody width="600" style="width:600px;">
                <tr width="600" style="width:600px;">
                  <td colspan="3">
                    <table>
                      <tr>
                        <td width="200" style="width:200px;"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/logo.png" alt="WAPRO ERP by Asseco" title="WAPRO ERP by Asseco" /></td>
                        <td width="400" style="width:400px;">
                          <table>
                            <tr>
                              <td width="360" align="right" style="width:360px; text-align:right; font-family:arial; font-size:14px; color:#000; text-decoration:none;">
                                <a style="font-family:arial; font-size:14px; color:#000; text-decoration:none;" href="http://www.wapro.pl">WAPRO ERP</a> 
                              </td>
                              <td width="40" style="width:40px;"></td>
                            </tr>
                          </table>
                        </td>
                      </tr>
                    </table>
                  </td>
                </tr>
                <tr width="600" style="width:600px;">
                  <td colspan="3"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/header-line.png" alt="" title="" /></td>
                </tr>
                <tr width="600" style="width:600px;">
                  <td width="40" style="width:40px;"></td>
                  <td width="520" style="width:580px;">
                            
          
          <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Poprzednie dane: </h2>
          
          <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane REJESTRACYJNE: </h4>
          <ul>
            <li><b>NIP:</b> ' . get_field('df_nip', 'post_' . $dane_firmy_id) . '</li>
            <li><b>Nazwa firmy:</b> ' . get_field('df_nazwa', 'post_' . $dane_firmy_id) . '</li>
            <li><b>E-mail:</b> ' . get_field('df_email', 'post_' . $dane_firmy_id) . '</li>
            <li><b>Adres:</b> ' . get_field('df_adres', 'post_' . $dane_firmy_id) . ' ' . get_field('df_kod_pocztowy', 'post_' . $dane_firmy_id) . ' ' . get_field('df_miasto', 'post_' . $dane_firmy_id) . '</li>
            <li><b>Województwo:</b> ' . get_field('df_wojewodztwo', 'post_' . $dane_firmy_id) . '</li>
            <li><b>Testowe konto partnera:</b> ' . $testoweKontoOld . '</li>
          </ul>
          <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane dodatkowe: </h4>
          <ul>
            <li><b>Imię i nazwisko:</b> ' . get_field('df_imie', 'post_' . $dane_firmy_id) . ' ' . get_field('df_nazwisko', 'post_' . $dane_firmy_id) . '</li>
            <li><b>Telefon:</b> ' . get_field('df_telefon', 'post_' . $dane_firmy_id) . '</li>
            <li><b>Fax:</b> ' . get_field('df_fax', 'post_' . $dane_firmy_id) . '</li>
            <li><b>WWW:</b> ' . get_field('df_www', 'post_' . $dane_firmy_id) . '</li>
          </ul>
          <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane korespondencyjne/kontaktowe: </h4>
          <ul>
            <li><b>Adres:</b> ' . get_field('df_k_adres', 'post_' . $dane_firmy_id) . ' ' . get_field('df_k_kod_pocztowy', 'post_' . $dane_firmy_id) . ' ' . get_field('df_k_miasto', 'post_' . $dane_firmy_id) . '</li>
            <li><b>Telefon:</b> ' . get_field('df_k_telefon', 'post_' . $dane_firmy_id) . '</li>
          </ul>

          <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Nowe dane: </h2>
          
          <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane REJESTRACYJNE: </h4>
          <ul>
            <li><b>NIP:</b> ' . $data['your-nip-register'] . '</li>
            <li><b>Nazwa firmy:</b> ' . $data['your-company'] . '</li>
            <li><b>E-mail:</b> ' . $data['email-biuro'] . '</li>
            <li><b>Adres:</b> ' . $data['your-adres'] . ' ' . $data['your-code'] . ' ' . $data['your-city'] . '</li>
            <li><b>Województwo:</b> ' . $data['wojewodztwo-biuro'][0] . '</li>
            <li><b>Testowe konto partnera:</b> ' . $testoweKontoNew . '</li>
          </ul>
          <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane dodatkowe: </h4>
          <ul>
            <li><b>Imię i nazwisko:</b> ' . $data['your-name'] . ' ' . $data['your-lastname'] . '</li>
            <li><b>Telefon:</b> ' . $data['telefon-biuro'] . '</li>
            <li><b>Fax:</b> ' . $data['fax'] . '</li>
            <li><b>WWW:</b> ' . $data['your-wwww'] . '</li>
          </ul>
          <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane korespondencyjne/kontaktowe: </h4>
          <ul>
            <li><b>Adres:</b> ' . $data['your-adres-kospondencja'] . ' ' . $data['your-code-kospondencja'] . ' ' . $data['your-city-kospondencja'] . '</li>
            <li><b>Telefon:</b> ' . $data['telefon-kospondencja'] . '</li>
          </ul>
          <br><br>
          </p>
                    <table border="0" cellspacing="0" cellpadding="0">
                      <tr>
                        <td style="height: 118px">
                          <strong style="font-family:arial; font-size:14px;">
                          <br>
                          Pozdrawiamy</strong><br />
                          <span style="font-family:arial; color:#da0d14; font-size:14px;">Zespół WAPRO ERP</span>
          
                          <p style="font-family:arial; font-size:14px;margin-bottom:20px;">
                            Asseco Business Solutions S.A.<br />
                            Oddział w Warszawie<br />
                            ul. Adama Branickiego 13<br />
                            <a style="font-family:arial; color:#da0d14; font-size:14px; text-decoration:underline;" href="http://wapro.pl">wapro.pl</a>
          
                          </p>
                        </td>
                      </tr>
                    </table>
                  </td>
                  <td width="40" style="width:40px;"></td>
                </tr>
              </tbody>
            </table>
          </body>';
          $to = 'tomasz.stach@astosoft.pl';
          wp_mail($to, $subject, $message, $headers);
          $to = 'boguslaw.tober@assecobs.pl';
          wp_mail($to, $subject, $message, $headers);
        }

        // Create/Update Dane Firmy
        update_field('df_nazwa', $data['your-company'], 'post_' . $dane_firmy_id);
        update_field('df_nip', $data['your-nip-register'], 'post_' . $dane_firmy_id);
        update_field('df_adres', $data['your-adres'], 'post_' . $dane_firmy_id);
        update_field('df_kod_pocztowy', $data['your-code'], 'post_' . $dane_firmy_id);
        update_field('df_miasto', $data['your-city'], 'post_' . $dane_firmy_id);
        update_field('df_wojewodztwo', $data['wojewodztwo-biuro'], 'post_' . $dane_firmy_id);
        update_field('df_email', $data['email-biuro'], 'post_' . $dane_firmy_id);
        if ($data['czy-testowy'][0]) {
          update_field('df_testowe_konto_parnera', $data['czy-testowy'], 'post_' . $dane_firmy_id);
        } else {
          update_field('df_testowe_konto_parnera', 0, 'post_' . $dane_firmy_id);
        }
        update_field('df_imie', $data['your-name'], 'post_' . $dane_firmy_id);
        update_field('df_nazwisko', $data['your-lastname'], 'post_' . $dane_firmy_id);
        update_field('df_telefon', $data['telefon-biuro'], 'post_' . $dane_firmy_id);
        update_field('df_fax', $data['fax'], 'post_' . $dane_firmy_id);
        update_field('df_www', $data['your-wwww'], 'post_' . $dane_firmy_id);
        update_field('df_k_adres', $data['your-adres-kospondencja'], 'post_' . $dane_firmy_id);
        update_field('df_k_kod_pocztowy', $data['your-code-kospondencja'], 'post_' . $dane_firmy_id);
        update_field('df_k_miasto', $data['your-city-kospondencja'], 'post_' . $dane_firmy_id);
        update_field('df_k_telefon', $data['telefon-kospondencja'], 'post_' . $dane_firmy_id);

        $uploaded_files = $submission->uploaded_files();

        if (count($uploaded_files)) {
          if (isset($uploaded_files['file-864'])) {
            if ($uploaded_files['file-864'] != '') {
              update_field('df_logo',  site_url() . explode('htdocs', $uploaded_files['file-864'])[1], 'post_' . $dane_firmy_id);
            }
          }
        }

        // Biuro registration
        if ($_POST['_wpcf7'] == '46621') {

          // Adding biuro localization
          // Add Post with biuro localization
          $post_id = 47508;
          $post = get_post($post_id);

          if (isset($post) && $post != null) {
            // new post data array
            $args = array(
              'comment_status' => $post->comment_status,
              'ping_status'    => $post->ping_status,
              'post_author'    => $post->post_author,
              'post_content'   => $post->post_content,
              'post_excerpt'   => $post->post_excerpt,
              'post_name'      => $post->post_name,
              'post_parent'    => $post->post_parent,
              'post_password'  => $post->post_password,
              'post_status'    => 'draft',
              'post_title'     => $data['your-company'],
              'post_type'      => $post->post_type,
              'to_ping'        => $post->to_ping,
              'menu_order'     => $post->menu_order
            );

            // Create new post
            $new_post_id = wp_insert_post($args);

            // Add localization
            update_field('br_lokalizacje', $new_post_id, 'user_' . $user_id);
            update_field('df_lokalizacje', $new_post_id, 'post_' . $dane_firmy_id);

            $taxonomies = get_object_taxonomies($post->post_type); // returns array of taxonomy names for post type, ex array("category", "post_tag");
            foreach ($taxonomies as $taxonomy) {
              $post_terms = wp_get_object_terms($post_id, $taxonomy, array('fields' => 'slugs'));
              wp_set_object_terms($new_post_id, $post_terms, $taxonomy, false);
            }

            $post_meta_infos = $wpdb->get_results("SELECT meta_key, meta_value FROM $wpdb->postmeta WHERE post_id=$post_id");

            if (count($post_meta_infos) != 0) {
              $sql_query = "INSERT INTO $wpdb->postmeta (post_id, meta_key, meta_value) ";
              foreach ($post_meta_infos as $meta_info) {
                $meta_key = $meta_info->meta_key;
                if ($meta_key == '_wp_old_slug') continue;
                if ($meta_key == 'br_adres') {
                  $meta_value = addslashes($data['your-adres']);
                } elseif ($meta_key == 'br_kod_pocztowy') {
                  $meta_value = addslashes($data['your-code']);
                } elseif ($meta_key == 'br_miasto') {
                  $meta_value = addslashes($data['your-city']);
                } elseif ($meta_key == 'br_wojewodztwo') {
                  $meta_value = addslashes($data['wojewodztwo-biuro'][0]);
                } elseif ($meta_key == 'br_obszar_dzialania') {
                  $json = 'a:' . count($data['br-obszar-dzialania']) . ':{';
                  $i = 0;
                  foreach ($data['br-obszar-dzialania'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-obszar-dzialania'] = $json . '}';
                  $meta_value = addslashes($data['br-obszar-dzialania']);
                } elseif ($meta_key == 'br_telefon') {
                  $meta_value = addslashes($data['telefon-biuro']);
                } elseif ($meta_key == 'br_fax') {
                  $meta_value = addslashes($data['fax']);
                } elseif ($meta_key == 'br_email') {
                  $meta_value = addslashes($data['email-dla-klientow']);
                } elseif ($meta_key == 'br_www') {
                  $meta_value = addslashes($data['your-wwww']);
                } elseif ($meta_key == 'br_online') {
                  if ($data['zgloszenie-biura']) {
                    $meta_value = 'tak';
                  }
                } elseif ($meta_key == 'br_rodzaj_biura') {
                  $json = 'a:' . count($data['br-rodzaj-biura']) . ':{';
                  $i = 0;
                  foreach ($data['br-rodzaj-biura'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-rodzaj-biura'] = $json . '}';
                  $meta_value = addslashes($data['br-rodzaj-biura']);
                } elseif ($meta_key == 'br_zakres_uslug') {
                  $json = 'a:' . count($data['br-zakres-uslug']) . ':{';
                  $i = 0;
                  foreach ($data['br-zakres-uslug'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-zakres-uslug'] = $json . '}';
                  $meta_value = addslashes($data['br-zakres-uslug']);
                } elseif ($meta_key == 'br_zakres_uslug_online') {
                  $json = 'a:' . count($data['br-zakres-uslug-online']) . ':{';
                  $i = 0;
                  foreach ($data['br-zakres-uslug-online'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-zakres-uslug-online'] = $json . '}';
                  $meta_value = addslashes($data['br-zakres-uslug-online']);
                } else {
                  $meta_value = addslashes($meta_info->meta_value);
                }
                $sql_query_sel[] = "SELECT $new_post_id, '$meta_key', '$meta_value'";
                $wpdb->query($sql_query);
              }
              $sql_query .= implode(" UNION ALL ", $sql_query_sel);
              $wpdb->query($sql_query);
            }
          }
        }
      }

      // Send information to ERP
      // TODO: Use webservices to send data to ERP???
    }

    // Add location form
    // Staging
    //if ($_POST['_wpcf7'] == '46875' or $_POST['_wpcf7'] == '47900') {
    // Production
    if ($_POST['_wpcf7'] == '46875' or $_POST['_wpcf7'] == '47929') {
      if ($userExist > 0) {
        $user_id = $userExist;
        $post_id = 47508;
        $post = get_post($post_id);

        $df_id = get_field('dane_firmy', 'user_' . $user_id);
        $uwagi = get_field('df_uwagi', 'post_' . $df_id->ID);
        $uwagi .= "\n\n" . date('Y-m-d H:i:s') . "\n" . $data['uwagi'];
        update_field('df_uwagi', $uwagi, 'post_' . $df_id->ID);

        if (isset($post) && $post != null) {
          if ($_POST['_wpcf7'] == '46875') {
            // new post data array
            $args = array(
              'comment_status' => $post->comment_status,
              'ping_status'    => $post->ping_status,
              'post_author'    => $post->post_author,
              'post_content'   => $post->post_content,
              'post_excerpt'   => $post->post_excerpt,
              'post_name'      => $post->post_name,
              'post_parent'    => $post->post_parent,
              'post_password'  => $post->post_password,
              'post_status'    => 'draft',
              'post_title'     => $data['your-company-biuro'],
              'post_type'      => $post->post_type,
              'to_ping'        => $post->to_ping,
              'menu_order'     => $post->menu_order
            );

            // Create new post
            $new_post_id = wp_insert_post($args);

            $taxonomies = get_object_taxonomies($post->post_type); // returns array of taxonomy names for post type, ex array("category", "post_tag");
            foreach ($taxonomies as $taxonomy) {
              $post_terms = wp_get_object_terms($post_id, $taxonomy, array('fields' => 'slugs'));
              wp_set_object_terms($new_post_id, $post_terms, $taxonomy, false);
            }

            $post_meta_infos = $wpdb->get_results("SELECT meta_key, meta_value FROM $wpdb->postmeta WHERE post_id=$post_id");

            if (count($post_meta_infos) != 0) {
              $sql_query = "INSERT INTO $wpdb->postmeta (post_id, meta_key, meta_value) ";
              foreach ($post_meta_infos as $meta_info) {
                $meta_key = $meta_info->meta_key;
                if ($meta_key == '_wp_old_slug') continue;
                if ($meta_key == 'br_adres') {
                  $meta_value = addslashes($data['your-adres']);
                } elseif ($meta_key == 'br_kod_pocztowy') {
                  $meta_value = addslashes($data['your-code']);
                } elseif ($meta_key == 'br_miasto') {
                  $meta_value = addslashes($data['your-city']);
                } elseif ($meta_key == 'br_wojewodztwo') {
                  $meta_value = addslashes($data['lok-wojewodztwo'][0]);
                } elseif ($meta_key == 'br_obszar_dzialania') {
                  $json = 'a:' . count($data['br-obszar-dzialania']) . ':{';
                  $i = 0;
                  foreach ($data['br-obszar-dzialania'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-obszar-dzialania'] = $json . '}';
                  $meta_value = addslashes($data['br-obszar-dzialania']);
                } elseif ($meta_key == 'br_telefon') {
                  $meta_value = addslashes($data['lok-telefon']);
                } elseif ($meta_key == 'br_fax') {
                  $meta_value = addslashes($data['fax']);
                } elseif ($meta_key == 'br_www') {
                  $meta_value = addslashes($data['your-wwww']);
                } elseif ($meta_key == 'br_email') {
                  $meta_value = addslashes($data['email-kontakt']);
                } elseif ($meta_key == 'br_online') {
                  if ($data['zgloszenie-biura']) {
                    $meta_value = 'tak';
                  }
                } elseif ($meta_key == 'br_rodzaj_biura') {
                  $json = 'a:' . count($data['br-rodzaj-biura']) . ':{';
                  $i = 0;
                  foreach ($data['br-rodzaj-biura'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-rodzaj-biura'] = $json . '}';
                  $meta_value = addslashes($data['br-rodzaj-biura']);
                } elseif ($meta_key == 'br_zakres_uslug') {
                  $json = 'a:' . count($data['br-zakres-uslug']) . ':{';
                  $i = 0;
                  foreach ($data['br-zakres-uslug'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-zakres-uslug'] = $json . '}';
                  $meta_value = addslashes($data['br-zakres-uslug']);
                } elseif ($meta_key == 'br_zakres_uslug_online') {
                  $json = 'a:' . count($data['br-zakres-uslug-online']) . ':{';
                  $i = 0;
                  foreach ($data['br-zakres-uslug-online'] as $item) {
                    $json .= 'i:' . $i . ';s:' . strlen($item) . ':"' . $item . '";';
                    $i++;
                  }
                  $data['br-zakres-uslug-online'] = $json . '}';
                  $meta_value = addslashes($data['br-zakres-uslug-online']);
                } else {
                  $meta_value = addslashes($meta_info->meta_value);
                }
                $sql_query_sel[] = "SELECT $new_post_id, '$meta_key', '$meta_value'";
                $wpdb->query($sql_query);
              }
              $sql_query .= implode(" UNION ALL ", $sql_query_sel);
              $wpdb->query($sql_query);
            }
          } else {
            // Get post id from the form
            $new_post_id = $data['loc'];

            if ($data['zgloszenie-biura']) {
              $biuro_online = ['tak'];
            } else {
              $biuro_online = ['nie'];
            }

            // Send mail
            $subject = 'Zmiana danych lokalizacji - Biuro rachunkowe';
            $headers[] = 'From: WAPRO ERP <kontakt@wapro.pl>';
            $headers[] = 'Reply-To: serwis.wapro@asscobs.pl';
            $headers[] = 'Content-Type: text/html; charset=UTF-8';
            $message = '<body bgcolor="#f7f5f5" style="background-color:#f7f5f5;">
              <table border="0" cellspacing="0" cellpadding="0" align="center" width="600" bgcolor="#fff" style="width:600px; background-color:#fff;">
                <tbody width="600" style="width:600px;">
                  <tr width="600" style="width:600px;">
                    <td colspan="3">
                      <table>
                        <tr>
                          <td width="200" style="width:200px;"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/logo.png" alt="WAPRO ERP by Asseco" title="WAPRO ERP by Asseco" /></td>
                          <td width="400" style="width:400px;">
                            <table>
                              <tr>
                                <td width="360" align="right" style="width:360px; text-align:right; font-family:arial; font-size:14px; color:#000; text-decoration:none;">
                                  <a style="font-family:arial; font-size:14px; color:#000; text-decoration:none;" href="http://www.wapro.pl">WAPRO ERP</a> 
                                </td>
                                <td width="40" style="width:40px;"></td>
                              </tr>
                            </table>
                          </td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                  <tr width="600" style="width:600px;">
                    <td colspan="3"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/header-line.png" alt="" title="" /></td>
                  </tr>
                  <tr width="600" style="width:600px;">
                    <td width="40" style="width:40px;"></td>
                    <td width="520" style="width:580px;">
                              
            
            <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Poprzednie dane: </h2>
            
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane PODSTAWOWE: </h4>
            <ul>
              <li><b>Nazwa:</b> ' . $data['your-company-biuro'] . '</li>
              <li><b>Adres:</b> ' . get_field('br_adres', 'post_' . $new_post_id) . ' ' . get_field('br_kod_pocztowy', 'post_' . $new_post_id) . ' ' . get_field('br_miasto', 'post_' . $new_post_id) . '</li>
              <li><b>Województwo:</b> ' . get_field('br_wojewodztwo', 'post_' . $new_post_id) . '</li>
            </ul>
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane KONTAKTOWE: </h4>
            <ul>
              <li><b>Telefon:</b> ' . get_field('br_telefon', 'post_' . $new_post_id) . '</li>
              <li><b>Fax:</b> ' . get_field('br_fax', 'post_' . $new_post_id) . '</li>
              <li><b>WWW:</b> ' . get_field('br_www', 'post_' . $new_post_id) . '</li>
              <li><b>E-mail:</b> ' . get_field('br_email', 'post_' . $new_post_id) . '</li>
            </ul>
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Obszar działania biura: </h4>
            <ul>';

            foreach (get_field('br_obszar_dzialania', 'post_' . $new_post_id) as $obszar) {
              $message .= '<li>' . $obszar . '</li>';
            }

            $message .= '</ul><h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Informacje o biurze: </h4>
            <ul>
              <li><b>Rodzaj biura:</b> ';
            foreach (get_field('br_rodzaj_biura', 'post_' . $new_post_id) as $rodzaj) {
              $message .= '<br>' . $rodzaj;
            }
            $message .= '</li>
            
              <li><b>Zakres usług:</b> ';
            foreach (get_field('br_zakres_uslug', 'post_' . $new_post_id) as $zakres) {
              $message .= '<br>' . $zakres;
            }
            $message .= '</li>

              <li><b>Zakres usług online:</b> ';
            foreach (get_field('br_zakres_uslug_online', 'post_' . $new_post_id) as $zakres_online) {
              $message .= '<br>' . $zakres_online;
            }
            $message .= '</li>
            </ul>
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Zgłoszenie biura do usługi Biuro Rachunkowe Online: </h4>
            <ul>
              <li><b>Biuro Rachunkowe Online:</b> ';
            foreach (get_field('br_online', 'post_' . $new_post_id) as $online) {
              if ($online == 'tak') {
                $message .= 'tak';
              } else {
                $message .= 'nie';
              }
            }
            $message .= '</li>
            </ul>

            <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Nowe dane: </h2>
            
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane PODSTAWOWE: </h4>
            <ul>
              <li><b>Nazwa:</b> ' . $data['your-company-biuro'] . '</li>
              <li><b>Adres:</b> ' . $data['your-adres'] . ' ' . $data['your-code'] . ' ' . $data['your-city'] . '</li>
              <li><b>Województwo:</b> ' . $data['lok-wojewodztwo'][0] . '</li>
            </ul>
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Dane KONTAKTOWE: </h4>
            <ul>
              <li><b>Telefon:</b> ' . $data['lok-telefon'] . '</li>
              <li><b>Fax:</b> ' . $data['fax'] . '</li>
              <li><b>WWW:</b> ' . $data['your-wwww'] . '</li>
              <li><b>E-mail:</b> ' . $data['email-kontakt'] . '</li>
            </ul>
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Obszar działania biura: </h4>
            <ul>';

            foreach ($data['br-obszar-dzialania'] as $obszar) {
              $message .= '<li>' . $obszar . '</li>';
            }

            $message .= '</ul><h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Informacje o biurze: </h4>
            <ul>
              <li><b>Rodzaj biura:</b> ';
            foreach ($data['br-rodzaj-biura'] as $rodzaj) {
              $message .= '<br>' . $rodzaj;
            }
            $message .= '</li>
            
              <li><b>Zakres usług:</b> ';
            foreach ($data['br-zakres-uslug'] as $zakres) {
              $message .= '<br>' . $zakres;
            }
            $message .= '</li>

              <li><b>Zakres usług online:</b> ';
            foreach ($data['br-zakres-uslug-online'] as $zakres_online) {
              $message .= '<br>' . $zakres_online;
            }
            $message .= '</li>
            </ul>
            <h4 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Zgłoszenie biura do usługi Biuro Rachunkowe Online: </h4>
            <ul>
              <li><b>Biuro Rachunkowe Online:</b> ' . $biuro_online[0] . '</li>
            </ul>
            <br><br>
            </p>
                      <table border="0" cellspacing="0" cellpadding="0">
                        <tr>
                          <td style="height: 118px">
                            <strong style="font-family:arial; font-size:14px;">
                            <br>
                            Pozdrawiamy</strong><br />
                            <span style="font-family:arial; color:#da0d14; font-size:14px;">Zespół WAPRO ERP</span>
            
                            <p style="font-family:arial; font-size:14px;margin-bottom:20px;">
                              Asseco Business Solutions S.A.<br />
                              Oddział w Warszawie<br />
                              ul. Adama Branickiego 13<br />
                              <a style="font-family:arial; color:#da0d14; font-size:14px; text-decoration:underline;" href="http://wapro.pl">wapro.pl</a>
            
                            </p>
                          </td>
                        </tr>
                      </table>
                    </td>
                    <td width="40" style="width:40px;"></td>
                  </tr>
                </tbody>
              </table>
            </body>';
            $to = 'tomasz.stach@astosoft.pl';
            wp_mail($to, $subject, $message, $headers);
            $to = 'boguslaw.tober@assecobs.pl';
            wp_mail($to, $subject, $message, $headers);

            update_field('br_adres', $data['your-adres'], 'post_' . $new_post_id);
            update_field('br_kod_pocztowy', $data['your-code'], 'post_' . $new_post_id);
            update_field('br_miasto', $data['your-city'], 'post_' . $new_post_id);
            update_field('br_wojewodztwo', $data['lok-wojewodztwo'], 'post_' . $new_post_id);
            update_field('br_obszar_dzialania', $data['br-obszar-dzialania'], 'post_' . $new_post_id);
            update_field('br_telefon', $data['lok-telefon'], 'post_' . $new_post_id);
            update_field('br_fax', $data['fax'], 'post_' . $new_post_id);
            update_field('br_www', $data['your-wwww'], 'post_' . $new_post_id);
            update_field('br_email', $data['email-kontakt'], 'post_' . $new_post_id);
            update_field('br_online', $biuro_online, 'post_' . $new_post_id);
            update_field('br_rodzaj_biura', $data['br-rodzaj-biura'], 'post_' . $new_post_id);
            update_field('br_zakres_uslug', $data['br-zakres-uslug'], 'post_' . $new_post_id);
            update_field('br_zakres_uslug_online', $data['br-zakres-uslug-online'], 'post_' . $new_post_id);
          }

          // Add new location to user data
          $loks = get_field('br_lokalizacje', 'user_' . $user_id);

          if (is_array($loks)) {
            if (!in_array($new_post_id, $loks)) {
              $loks[] = $new_post_id;
              update_field('br_lokalizacje', $loks, 'user_' . $user_id);
            }
          } elseif (!empty($loks) and $loks != $new_post_id) {
            $new_loks = [$loks, $new_post_id];
            update_field('br_lokalizacje', $new_loks, 'user_' . $user_id);
          } else {
            $new_loks = [$new_post_id];
            update_field('br_lokalizacje', $new_loks, 'user_' . $user_id);
          }
          unset($loks);
          unset($new_loks);

          // Add new admin for the location to user data
          $loks = get_field('br_admin_lokalizacje', 'user_' . $user_id);

          if (is_array($loks)) {
            if (!in_array($new_post_id, $loks)) {
              $loks[] = $new_post_id;
              update_field('br_admin_lokalizacje', $loks, 'user_' . $user_id);
            }
          } elseif (!empty($loks) and $loks != $new_post_id) {
            $new_loks = [$loks, $new_post_id];
            update_field('br_admin_lokalizacje', $new_loks, 'user_' . $user_id);
          } else {
            $new_loks = [$new_post_id];
            update_field('br_admin_lokalizacje', $new_loks, 'user_' . $user_id);
          }
          unset($loks);
          unset($new_loks);

          // Add new location to dane firmy
          $loks = get_field('df_lokalizacje', 'post_' . $df_id->ID);

          if (is_array($loks)) {
            if (!in_array($new_post_id, $loks)) {
              $loks[] = $new_post_id;
              update_field('df_lokalizacje', $loks, 'post_' . $df_id->ID);
            }
          } elseif (!empty($loks) and $loks != $new_post_id) {
            $new_loks = [$loks, $new_post_id];
            update_field('df_lokalizacje', $new_loks, 'post_' . $df_id->ID);
          } else {
            $new_loks = [$new_post_id];
            update_field('df_lokalizacje', $new_loks, 'post_' . $df_id->ID);
          }
        }
      }
    }

    // Dodaj nowego uzytkownika biur
    if ($_POST['_wpcf7'] == '48555') {
      if ($userExist == 0) {
        // Adding user
        $user_id = username_exists($data['your-login-admin']);

        if (!$user_id and email_exists($data['email-admin']) == false) {
          if (strlen($data['password']) < 2) {
            $data['password'] = randomPassword();
          }
          $user_id = wp_create_user($data['your-login-admin'], $data['password'], $data['email-admin']);
          update_user_meta($user_id, "first_name",  $data['your-name-admin']);
          update_user_meta($user_id, "last_name",  $data['your-lastname-admin']);

          $user = new \WP_User($user_id);
          $user->set_role('registeredbiuro');

          $dealer_id = get_blog_id_from_url("partnerzy.wapro.pl");
          if ($dealer_id) {
            add_user_to_blog($dealer_id, $user_id, 'brak');
          }

          $wpdev_id = get_blog_id_from_url("wapro.pl");
          if ($wpdev_id) {
            add_user_to_blog($wpdev_id, $user_id, 'brak');
          }

          $pomoc_id = get_blog_id_from_url("pomoc.wapro.pl");
          if ($pomoc_id) {
            add_user_to_blog($pomoc_id, $user_id, 'subscriber');
          }
        } else {
          $user = new \WP_User($user_id);
          $user->set_role('registeredbiuro');
        }
      } else {
        $user_id  = $userExist;
        $user     = new \WP_User($user_id);
        $roles    = (array) $user->roles;

        if (count($roles) == 0) {
          $user->set_role('registeredbiuro');
        } elseif ($roles[0] == 'brak') {
          $user->set_role('registeredbiuro');
        }
      }
    }

    // Dodaj nowego uzytkownika partnerow
    if ($_POST['_wpcf7'] == '54295') {
      if ($userExist == 0) {
        // Adding user
        $user_id = username_exists($data['your-login-admin']);

        if (!$user_id and email_exists($data['email-admin']) == false) {
          if (strlen($data['password']) < 2) {
            $data['password'] = randomPassword();
          }
          $user_id = wp_create_user($data['your-login-admin'], $data['password'], $data['email-admin']);
          update_user_meta($user_id, "first_name",  $data['your-name-admin']);
          update_user_meta($user_id, "last_name",  $data['your-lastname-admin']);

          $user = new \WP_User($user_id);
          $user->set_role('registered');

          $dealer_id = get_blog_id_from_url("biura.wapro.pl");
          if ($dealer_id) {
            add_user_to_blog($dealer_id, $user_id, 'brak');
          }

          $wpdev_id = get_blog_id_from_url("wapro.pl");
          if ($wpdev_id) {
            add_user_to_blog($wpdev_id, $user_id, 'brak');
          }

          $pomoc_id = get_blog_id_from_url("pomoc.wapro.pl");
          if ($pomoc_id) {
            add_user_to_blog($pomoc_id, $user_id, 'subscriber');
          }
        } else {
          $user = new \WP_User($user_id);
          $user->set_role('registered');
        }
      } else {
        $user_id  = $userExist;
        $user     = new \WP_User($user_id);
        $roles    = (array) $user->roles;

        if (count($roles) == 0) {
          $user->set_role('registered');
        } elseif ($roles[0] == 'brak') {
          $user->set_role('registered');
        }
      }
    }

    // Dodaj pracownika do lokalizacji
    if ($_POST['_wpcf7'] == '47180') {
      // Adding user
      $location_id  = $data['loc'];

      $user_id = username_exists($data['your-login-email-admin']);

      if ($user_id) {
        $user     = new \WP_User($user_id);
        $user->set_role('subscriber');
        custom_user_change_function($user_id, 'subscriber', [], true);

        // Add new location to user data
        if ($data['wszystkie_lokalizacje'][0]) {
          // query args
          $args = array(
            'numberposts'   => -1,
            'post_status'   => array('publish', 'pending', 'draft', 'auto-draft', 'future', 'private', 'inherit', 'trash'),
            'post_type'     => 'dane_firmy',
            'meta_query'    => array(
              array(
                'key'        => 'df_lokalizacje',
                'value'      => $location_id,
                'compare'    => 'LIKE'
              )
            )
          );

          // query
          $firma   = get_posts($args);

          if (is_object($firma[0])) {
            // get locations
            $loks_biuro = get_field('df_lokalizacje', 'post_' . $firma[0]->ID);

            foreach ($loks_biuro as $lok) {
              $loks = get_field('br_lokalizacje', 'user_' . $user_id);

              if (is_array($loks)) {
                if (!in_array($lok, $loks)) {
                  $loks[] = $lok;
                  update_field('br_lokalizacje', $loks, 'user_' . $user_id);
                }
              } elseif (!empty($loks) and $loks != $lok) {
                $new_loks = [$loks, $lok];
                update_field('br_lokalizacje', $new_loks, 'user_' . $user_id);
              } else {
                $new_loks = [$lok];
                update_field('br_lokalizacje', $new_loks, 'user_' . $user_id);
              }
              unset($loks);
              unset($new_loks);
            }
          }
        } else {
          $loks = get_field('br_lokalizacje', 'user_' . $user_id);

          if (is_array($loks)) {
            if (!in_array($location_id, $loks)) {
              $loks[] = $location_id;
              update_field('br_lokalizacje', $loks, 'user_' . $user_id);
            }
          } elseif (!empty($loks) and $loks != $location_id) {
            $new_loks = [$loks, $location_id];
            update_field('br_lokalizacje', $new_loks, 'user_' . $user_id);
          } else {
            $new_loks = [$location_id];
            update_field('br_lokalizacje', $new_loks, 'user_' . $user_id);
          }
          unset($loks);
          unset($new_loks);
        }

        // Add new admin for the location to user data
        if ($data['administrator'][0]) {
          $loks = get_field('br_admin_lokalizacje', 'user_' . $user_id);

          if (is_array($loks)) {
            if (!in_array($location_id, $loks)) {
              $loks[] = $location_id;
              update_field('br_admin_lokalizacje', $loks, 'user_' . $user_id);
            }
          } elseif (!empty($loks) and $loks != $location_id) {
            $new_loks = [$loks, $location_id];
            update_field('br_admin_lokalizacje', $new_loks, 'user_' . $user_id);
          } else {
            $new_loks = [$location_id];
            update_field('br_admin_lokalizacje', $new_loks, 'user_' . $user_id);
          }
          unset($loks);
          unset($new_loks);
        }
      }
      //$user->set_role('subscriber');
    }

    // Dodaj klienta do lokalizacji
    if ($_POST['_wpcf7'] == '47183') {
      // new post data array
      $args = array(
        'comment_status' => 'closed',
        'post_status'    => 'private',
        'post_title'     => $data['loc'] . ' - ' . $data['cli-nazwa-firmy'],
        'post_type'      => 'client'
      );

      // Create new post
      $new_post_id = wp_insert_post($args);

      update_field('cli_nazwa_firmy', $data['cli-nazwa-firmy'], 'post_' . $new_post_id);
      update_field('cli_nip', $data['cli-nip'], 'post_' . $new_post_id);
      update_field('cli_email', $data['cli-email'], 'post_' . $new_post_id);
      update_field('cli_adres', $data['cli-adres'], 'post_' . $new_post_id);
      update_field('cli_kod_pocztowy', $data['cli-code'], 'post_' . $new_post_id);
      update_field('cli_miasto', $data['cli-city'], 'post_' . $new_post_id);
      update_field('cli_wojewodztwo', $data['cli-wojewodztwo'], 'post_' . $new_post_id);
      update_field('cli_uwagi', $data['cli-uwagi'], 'post_' . $new_post_id);
      update_field('cli_email_kontakt', $data['cli-email-kontakt'], 'post_' . $new_post_id);

      foreach ($data['cli-biuro-online'] as $zakres) {
        if ($zakres == 'Portal Klienta Biura Rachunkowego Online') {
          update_field('cli_portal_klienta_biura_online', ['tak'], 'post_' . $new_post_id);
        } else {
          update_field('cli_biuro_rachunkowe_online', ['tak'], 'post_' . $new_post_id);
        }
      }

      if ($data['wszystkie_lokalizacje'][0]) {
        // query args
        $args = array(
          'numberposts'   => -1,
          'post_status'   => array('publish', 'pending', 'draft', 'auto-draft', 'future', 'private', 'inherit', 'trash'),
          'post_type'     => 'dane_firmy',
          'meta_query'    => array(
            array(
              'key'        => 'df_lokalizacje',
              'value'      => $data['loc'],
              'compare'    => 'LIKE'
            )
          )
        );

        // query
        $firma   = get_posts($args);

        if (is_object($firma[0])) {

          // get locations
          $loks_biuro = get_field('df_lokalizacje', 'post_' . $firma[0]->ID);

          foreach ($loks_biuro as $lok) {

            $clients = get_field('br_klienci', 'post_' . $lok);

            if (is_array($clients)) {
              if (!in_array($new_post_id, $clients)) {
                $clients[] = $new_post_id;
                update_field('br_klienci', $clients, 'post_' . $lok);
              }
            } elseif (!empty($clients) and $clients != $new_post_id) {
              $new_clients = [$clients, $new_post_id];
              update_field('br_klienci', $new_clients, 'post_' . $lok);
            } else {
              $new_clients = [$new_post_id];
              update_field('br_klienci', $new_clients, 'post_' . $lok);
            }
            unset($clients);
            unset($new_clients);
          }
        }
      } else {

        $clients = get_field('br_klienci', 'post_' . $data['loc']);

        if (is_array($clients)) {
          if (!in_array($new_post_id, $clients)) {
            $clients[] = $new_post_id;
            update_field('br_klienci', $clients, 'post_' . $data['loc']);
          }
        } elseif (!empty($clients) and $clients != $new_post_id) {
          $new_clients = [$clients, $new_post_id];
          update_field('br_klienci', $new_clients, 'post_' . $data['loc']);
        } else {
          $new_clients = [$new_post_id];
          update_field('br_klienci', $new_clients, 'post_' . $data['loc']);
        }
      }
    }

    // Korzystaj online form
    if ($_POST['_wpcf7'] == '35288' or $_POST['_wpcf7'] == '52001') {
      global $current_user;
      $current_user = wp_get_current_user();
      $nip  = $data['yl-nip'];

      // SEND RODO CONTRACT TO ERP
      //$url = 'https://mcl.assecobs.pl/ERP_Service/services_integration_api/ApiWebService.ashx?wsdl&DBC=ABS_TEST';
      $url = 'https://mcl.assecobs.pl/ERP_Service_Prod/services_integration_api/ApiWebService.ashx?wsdl&dbc=ABS_PROD';

      $client = new SoapClient($url, array("trace" => 1, "exception" => 0));

      $paramsCustomer     = array('ArrayCustomerGetData' => array('CustomerGetData' => array('NIPSameCyfry' => $nip)));
      $responseCustomer   = $client->CUSTOMERGET($paramsCustomer);

      $posiadaOnline = $data['posiada-online'][0] == 'Tak' ? 'T' : 'N';

      // Create user in ERP
      $paramsCreateCustomer = ['ArrayHostingCustomerCreateData' => ['HostingCustomerCreateData' => [
        'Id' => time(),
        'DataDodania' => date(DATE_ATOM),
        'KlientImie' => $data['firma-imie'],
        'KlientNazwisko' => $data['firma-nazwisko'],
        'KlientNazwaFirmy' => $data['firma'],
        'KlientKodP' => $data['yl-kod-pocztowy'],
        'KlientMiasto' => $data['yl-miasto'],
        'KlientUlica' => $data['yl-ulica'],
        'KlientNIP' => str_replace('-', '', trim($data['yl-nip'])),
        'KlientNipSameCyfry' => str_replace('-', '', trim($data['yl-nip'])),
        'KlientTelefon' => $data['firma-telefon'],
        'KlientEmail' => $data['firma-e-mail'],
        'KontaktImie' => $data['yl-imie'],
        'KontaktNazwisko' => $data['yl-nazwisko'],
        'KontaktTelefon' => $data['yl-telefon'],
        'KontaktEmail' => $data['yl-email'],
        'KontakUwagi' => $data['uwagi'],
        'ProgramOnline' => $posiadaOnline,
        'ProgramMag' => intval($_POST['number-mag']) == 0 ? 0 : 1,
        'ProgramMagBiznes' => intval($_POST['number-mag-biznes']) == 0 ? 0 : 1,
        'ProgramAukcje' => intval($_POST['number-aukcje']) == 0 ? 0 : 1,
        'ProgramFakir' => intval($_POST['number-fakir']) == 0 ? 0 : 1,
        'ProgramKaper' => intval($_POST['number-kaper']) == 0 ? 0 : 1,
        'ProgramGang' => intval($_POST['number-gang']) == 0 ? 0 : 1,
        'ProgramBest' => intval($_POST['number-best']) == 0 ? 0 : 1,
        'ProgramAnalizy' => intval($_POST['number-analizy']) == 0 ? 0 : 1,
        'ProgramMagMobileAndroid' => intval($_POST['number-mobile']) == 0 ? 0 : 1,
        'ProgramMagMobileWindows' => 0,
        'ProgramMagMobilePDA' => 0,
        'ProgramJPK' => intval($_POST['number-jpk-biznes']) == 0 ? 0 : 1,
        'ProgramJPKBiuro' => intval($_POST['number-jpk']) == 0 ? 0 : 1,
        'PartnerNipSameCyfry' => str_replace('-', '', trim($data['partner-NIP'])),
        'PartnerEmail' => $data['partner-email'],
        'BiuroNipSameCyfry' => str_replace('-', '', trim($data['biuro-NIP'])),
        'BiuroEmail' => $data['biuro-email'],
        'ZgodaRegulamin' => 'T',
        'ZgodaEFaktury' => 'T',
        'ZgodaEmailEFaktury' => $data['E-mail'],
        'ZgodaInfHandlowe' => 'T',
        'ZgodaEmail' => 'N',
        'ZgodaSMS' => 'N',
        'ZgodaKontaktKonsult' => 'N'
      ]]];
      $response = $client->HostingCustomerCreate($paramsCreateCustomer);
    }

    // RODO first step form
    if ($_POST['_wpcf7'] == '51929') {

      $date         = date('Y-m-d H:i:s');
      $firm         = addslashes(stripslashes(strip_tags($data['firma-klienta'])));

      $args = array(
        'comment_status' => 'closed',
        'post_status'    => 'private',
        'post_title'     => 'Umowa rodo z ' . $firm . ' ' . $date,
        'post_type'      => 'umowa_rodo'
      );

      // Create new post
      $new_post_id = wp_insert_post($args);

      $rodzajUmowy = implode(',', $data['rodzaj-umowy']);

      // Email klienta
      update_field('field_5e6d4b9dd431f', $data['firma-e-mail'], 'post_' . $new_post_id);
      // Email osoby z serwisu
      update_field('field_5e6d4c4fd4320', $data['serwis-e-mail'], 'post_' . $new_post_id);
      // NIP
      update_field('field_5e6d4c5cd4321', $data['nip-klienta'], 'post_' . $new_post_id);
      // Rodzaj umowy
      update_field('field_5e6d4c90d4323', $rodzajUmowy, 'post_' . $new_post_id);
      // Data wysylki
      update_field('field_5e6d4caad4324', $date, 'post_' . $new_post_id);

      $subject = 'Prośba o podpisanie umowy RODO';
      $headers[] = 'From: WAPRO ERP <kontakt@wapro.pl>';
      $headers[] = 'Reply-To: serwis.wapro@asscobs.pl';
      $headers[] = 'Content-Type: text/html; charset=UTF-8';
      $message = '<body bgcolor="#f7f5f5" style="background-color:#f7f5f5;">
        <table border="0" cellspacing="0" cellpadding="0" align="center" width="600" bgcolor="#fff" style="width:600px; background-color:#fff;">
          <tbody width="600" style="width:600px;">
            <tr width="600" style="width:600px;">
              <td colspan="3">
                <table>
                  <tr>
                    <td width="200" style="width:200px;"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/logo.png" alt="WAPRO ERP by Asseco" title="WAPRO ERP by Asseco" /></td>
                    <td width="400" style="width:400px;">
                      <table>
                        <tr>
                          <td width="360" align="right" style="width:360px; text-align:right; font-family:arial; font-size:14px; color:#000; text-decoration:none;">
                            <a style="font-family:arial; font-size:14px; color:#000; text-decoration:none;" href="http://www.wapro.pl">WAPRO ERP</a> 
                          </td>
                          <td width="40" style="width:40px;"></td>
                        </tr>
                      </table>
                    </td>
                  </tr>
                </table>
              </td>
            </tr>
            <tr width="600" style="width:600px;">
              <td colspan="3"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/header-line.png" alt="" title="" /></td>
            </tr>
            <tr width="600" style="width:600px;">
              <td width="40" style="width:40px;"></td>
              <td width="520" style="width:580px;">
                        
      
      <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Szanowni Państwo! </h2>
      
      <p style="font-size:12px; text-align:justify; font-family:Arial, Helvetica, Verdana, sans-serif;">
      W celu wypełnienia umowy RODO (' . $rodzajUmowy . '), wypełnij formularz na stronie: 
      <br><br>
      <a href="https://wapro.pl/?page_id=51927&c=' . $new_post_id . '">https://wapro.pl/umowa-rodo-podpisanie/</a>.
      <br><br>
      W razie pytań prosimy kontaktować się z <a href="mailto:' . $data['serwis-e-mail'] . '"> ' . $data['serwis-e-mail'] . '</a>
      <br><br>
      Dziękujemy.
      <br><br>
      </p>
                <table border="0" cellspacing="0" cellpadding="0">
                  <tr>
                    <td style="height: 118px">
                      <strong style="font-family:arial; font-size:14px;">
                      <br>
                      Pozdrawiamy</strong><br />
                      <span style="font-family:arial; color:#da0d14; font-size:14px;">Zespół WAPRO ERP</span>
      
                      <p style="font-family:arial; font-size:14px;margin-bottom:20px;">
                        Asseco Business Solutions S.A.<br />
                        Oddział w Warszawie<br />
                        ul. Adama Branickiego 13<br />
                        <a style="font-family:arial; color:#da0d14; font-size:14px; text-decoration:underline;" href="http://wapro.pl">wapro.pl</a>
      
                      </p>
                    </td>
                  </tr>
                </table>
              </td>
              <td width="40" style="width:40px;"></td>
            </tr>
          </tbody>
        </table>
      </body>';
      $to = $data['firma-e-mail'];
      wp_mail($to, $subject, $message, $headers);
    }

    // RODO second step form
    if ($_POST['_wpcf7'] == '51931') {
      $nip  = preg_replace('/\s+/', '', str_replace('-', '', strip_tags($data['nip-klienta'])));
      $umowa_id = $data['umowa_id'];
      $subject = 'Potwierdzenie zawarcia umowy przetwarzania danych osobowych';
      $headers[] = 'From: WAPRO ERP <kontakt@wapro.pl>';
      $headers[] = 'Reply-To: serwis.wapro@asscobs.pl';
      $headers[] = 'Content-Type: text/html; charset=UTF-8';
      $attachments = array(WP_CONTENT_DIR . '/uploads/2019/10/Umowa_powierzenia_przetwarzania_danych_osobowych.pdf');

      // SEND RODO CONTRACT TO ERP
      //$url = 'https://mcl.assecobs.pl/ERP_Service/services_integration_api/ApiWebService.ashx?wsdl&DBC=ABS_TEST';
      $url = 'https://mcl.assecobs.pl/ERP_Service_Prod/services_integration_api/ApiWebService.ashx?wsdl&dbc=ABS_PROD';

      $client = new SoapClient($url, array("trace" => 1, "exception" => 0));

      $paramsCustomer     = array('ArrayCustomerGetData' => array('CustomerGetData' => array('NIPSameCyfry' => $nip)));
      $responseCustomer   = $client->CUSTOMERGET($paramsCustomer);

      $paramsAgreement   = ['ArrayDPAgreementGetData' => ['DPAgreementGetData' => ['NIPSameCyfry' => $nip]]];
      $responseAgreement = $client->DPAgreementGet($paramsAgreement);

      if ($responseAgreement->ArrayDPAgreementGetResult->Status != '0') {
        if (is_array($responseAgreement->ArrayDPAgreementGetResult->DPAgreementGetResult)) {
          $DPAgreementGetResult = $responseAgreement->ArrayDPAgreementGetResult->DPAgreementGetResult[count($responseAgreement->ArrayDPAgreementGetResult->DPAgreementGetResult) - 1];
        } else {
          $DPAgreementGetResult = $responseAgreement->ArrayDPAgreementGetResult->DPAgreementGetResult;
        }
      } else {
        $DPAgreementGetResult = new \stdClass;
        $DPAgreementGetResult->Konserwacja    = '0';
        $DPAgreementGetResult->Outsourcing    = '0';
        $DPAgreementGetResult->Hosting        = '0';
        $DPAgreementGetResult->UruchTestProg  = '0';
      }

      if ($data['rodzaj_umowy'] == 'Hosting') {
        $Hosting = 1;
      } else {
        $Hosting = $DPAgreementGetResult->Hosting;
      }

      if (strpos($data['rodzaj_umowy'], 'Uruchomienie') !== false) {
        $UruchTestProg = 1;
      } else {
        $UruchTestProg = $DPAgreementGetResult->UruchTestProg;
      }

      // Imię i nazwisko klienta
      update_field('field_5e6d4b75d431e', $data['rodo-name'], 'post_' . $umowa_id);
      // Rodzaj umocowania
      update_field('field_5e6d4c79d4322', $data['rodo-rodzaj'], 'post_' . $umowa_id);
      // Data podpisania umowy
      update_field('field_5e6d4cf9d4325', date('Y-m-d H:i:s'), 'post_' . $umowa_id);
      // Wersja umowy
      update_field('field_5e7221c1aa563', '20190624', 'post_' . $umowa_id);

      $params = ['ArrayAgreementCreateData' => ['AgreementCreateData' => [
        'NrZewn' => $umowa_id.date('YmdHis'),
        'Zrodlo' => 'Wapro',
        'NIPSameCyfry' => $nip,
        'WersjaUmowy' => '20190624',
        'DataPodpisania' => date(DATE_ATOM),
        'RealizacjaOd' => date(DATE_ATOM),
        'OpisUmowy' => 'Umowa powierzenia przetwarzania danych osobowych',
        'EDOK' => '1',
        'Aneks' => '0',
        'DataDo' => '2050-12-31T00:00:00',
        'RealizacjaDo' => '2050-12-31T00:00:00',
        'RodzajUmocowania' => $data['rodo-rodzaj'],
        'ImieNazwisko' => $data['rodo-name'],
        'Konserwacja' => $DPAgreementGetResult->Konserwacja,
        'Outsourcing' => $DPAgreementGetResult->Outsourcing,
        'DaneKontaktoweDPO' => 'brak',
        'MailDoZglaszaniaNaruszen' => $data['rodo-e-mail'],
        'UruchTestProg' => $UruchTestProg,
        'Hosting' => $Hosting
      ]]];
      $response = $client->AgreementCreate($params);

      $message = '<body bgcolor="#f7f5f5" style="background-color:#f7f5f5;">
      <table border="0" cellspacing="0" cellpadding="0" align="center" width="600" bgcolor="#fff" style="width:600px; background-color:#fff;">
        <tbody width="600" style="width:600px;">
          <tr width="600" style="width:600px;">
            <td colspan="3">
              <table>
                <tr>
                  <td width="200" style="width:200px;"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/logo.png" alt="WAPRO ERP by Asseco" title="WAPRO ERP by Asseco" /></td>
                  <td width="400" style="width:400px;">
                    <table>
                      <tr>
                        <td width="360" align="right" style="width:360px; text-align:right; font-family:arial; font-size:14px; color:#000; text-decoration:none;">
                          <a style="font-family:arial; font-size:14px; color:#000; text-decoration:none;" href="http://www.wapro.pl">WAPRO ERP</a> 
                        </td>
                        <td width="40" style="width:40px;"></td>
                      </tr>
                    </table>
                  </td>
                </tr>
              </table>
            </td>
          </tr>
          <tr width="600" style="width:600px;">
            <td colspan="3"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/header-line.png" alt="" title="" /></td>
          </tr>
          <tr width="600" style="width:600px;">
            <td width="40" style="width:40px;"></td>
            <td width="520" style="width:580px;">
                      
    
    <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Szanowni Państwo! </h2>
    
    <p style="font-size:12px; text-align:justify; font-family:Arial, Helvetica, Verdana, sans-serif;">
    Potwierdzamy zawarcie z nami umowy powierzenia przetwarzania danych osobowych w treści jak w załączeniu, przy czym: 
    <br><br>
    Osoba zawierająca umowę: ' . $data['rodo-name'] . ' (' . $data['rodo-rodzaj'] . ') 
    <br><br>
    Data zawarcia: ' . date('Y-m-d H:i:s') . ' 
    <br><br>
    Adres e-mail do zgłaszania naruszeń: ' . $data['rodo-e-mail'] . ' 
    <br><br>
    Zakres obowiązywania umowy: ' . $data['rodzaj_umowy'] . '
    <br><br>
    Umowa została zawarta zdalnie przez kliknięcie w przycisk i akceptację danych w formularzu przystąpienia do umowy. 
    <br><br>
    Przypominamy, że nie jest wymagane drukowanie i przesyłanie papierowego egzemplarza podpisanej umowy.
    </p>
              <table border="0" cellspacing="0" cellpadding="0">
                <tr>
                  <td style="height: 118px">
                    <strong style="font-family:arial; font-size:14px;">
                    <br>
                    Pozdrawiamy</strong><br />
                    <span style="font-family:arial; color:#da0d14; font-size:14px;">Zespół WAPRO ERP</span>
    
                    <p style="font-family:arial; font-size:14px;margin-bottom:20px;">
                      Asseco Business Solutions S.A.<br />
                      Oddział w Warszawie<br />
                      ul. Adama Branickiego 13<br />
                      <a style="font-family:arial; color:#da0d14; font-size:14px; text-decoration:underline;" href="http://wapro.pl">wapro.pl</a>
    
                    </p>
                  </td>
                </tr>
              </table>
            </td>
            <td width="40" style="width:40px;"></td>
          </tr>
        </tbody>
      </table>
    </body>';

      $to = $data['rodo-e-mail'];
      wp_mail($to, $subject, $message, $headers, $attachments);
      $to = $data['serwis-email'];
      wp_mail($to, $subject, $message, $headers, $attachments);
      $to = 'boguslaw.tober@assecobs.pl';
      wp_mail($to, $subject, $message, $headers, $attachments);
      $to = 'Agnieszka.Palyz@assecobs.pl';
      wp_mail($to, $subject, $message, $headers, $attachments);
      $to = 'astosoft@astosoft.pl';
      $message = print_r($params, true)."<br/><br/>".print_r($response, true)."<br/><br/>".$message;
      wp_mail($to, $subject, $message, $headers, $attachments);
    }

    // Register pomoc user form
    if ($_POST['_wpcf7'] == '47120') {

      // Adding user
      $user_id = username_exists($data['your-login-admin']);

      if (!$user_id and email_exists($data['email-admin']) == false) {

        if (strlen($data['password']) < 2) {
          $data['password'] = randomPassword();
        }
        $user_id = wp_create_user($data['your-login-admin'], $data['password'], $data['email-admin']);
        update_user_meta($user_id, "first_name",  $data['your-name-admin']);
        update_user_meta($user_id, "last_name",  $data['your-lastname-admin']);

        $user = new \WP_User($user_id);
        $user->set_role('subscriber');

        $dealer_id = get_blog_id_from_url("partnerzy.wapro.pl");

        if ($dealer_id) {
          add_user_to_blog($dealer_id, $user_id, 'brak');
        }

        $wpdev_id = get_blog_id_from_url("wapro.pl");

        if ($wpdev_id) {
          add_user_to_blog($wpdev_id, $user_id, 'brak');
        }

        $biuro_id = get_blog_id_from_url("biura.wapro.pl");

        if ($biuro_id) {
          add_user_to_blog($biuro_id, $user_id, 'brakbiuro');
        }
      } else {
        $user = new \WP_User($user_id);
        $roles = (array) $user->roles;

        if (count($roles) == 0) {
          $user->set_role('subscriber');
        } elseif ($roles[0] == 'brak') {
          $user->set_role('subscriber');
        }
      }

      // Add NIP to the user data
      update_field('field_5dd7a70620a10', $data['your-nip-register'], 'user_' . $user_id);

      // Add tel to the user data
      update_field('field_5dd9596bc5807', $data['telefon-klient'], 'user_' . $user_id);

      // Add firm to the user data
      update_field('field_5dd9597daea4f', $data['your-company'], 'user_' . $user_id);

      // Send information to ERP
      // TODO: Use webservices to send data to ERP???
    }

    // Umowa serwisowa form 
    if ($_POST['_wpcf7'] == '47037' || $_POST['_wpcf7'] == '47951') {

      global $current_user;
      $current_user = wp_get_current_user();
      $user_meta    = get_user_meta($current_user->ID);

      $date = date('Y-m-d H:i:s');

      $args = array(
        'comment_status' => 'closed',
        'post_status'    => 'publish',
        'post_title'     => 'Plik do umowy serwisowej z ' . $data['zleceniodawca'] . ', dodany ' . $date,
        'post_type'      => 'plik_umowy'
      );

      $programy = [
        'program_version_aukcje' => 'WAPRO Aukcje',
        'program_version_analizy' => 'WAPRO Analizy',
        'program_version_best' => 'WAPRO Best',
        'program_version_fakir' => 'WAPRO Fakir',
        'program_version_fakturka' => 'WAPRO Fakturka',
        'program_version_gang' => 'WAPRO Gang',
        'program_version_jpk' => 'WAPRO JPK',
        'program_version_kaper' => 'WAPRO Kaper',
        'program_version_mag' => 'WAPRO Mag',
        'program_version_mobile' => 'WAPRO Mobile',
        'program_version_mobile-android' => 'WAPRO Mobile Android',
        'program_version_wf-kaper-dos' => 'WF-KaPeR DOS',
        'program_version_wf-mag-dos' => 'WF-MAG DOS',
        'program_version_wf-fakir-dos' => 'WF-FaKir DOS'
      ];

      if (is_array($data['sql'])) {
        if (count($data['sql']) > 0) {
          $sql = $data['sql'][0];
        } else {
          $sql = '';
        }
      } else {
        $sql = $data['sql'];
      }

      if (is_array($data['program'])) {
        if (count($data['program']) > 0) {
          $program = $data['program'][0];
        } else {
          $program = '';
        }
      } else {
        $program = $data['program'];
      }

      if ($program != '') {
        if (array_search($program, $programy)) {
          $wersja = $data[array_search($program, $programy)];

          if (is_array($wersja)) {
            $wersja = $wersja[0];
          }
        } else {
          $wersja = '';
        }
      } else {
        $wersja = '';
      }

      // Create new post
      $new_post_id = wp_insert_post($args);
      //program_version_analizy
      // Add Umowa ID in the file data
      update_field('field_5de2cf1a8e445',  $data['umowa_id'], 'post_' . $new_post_id);
      // Add path to the file
      update_field('field_5de2cf4d8e446',  $data['sciezka'], 'post_' . $new_post_id);
      // Add password to the file
      update_field('field_5de2cf948e447',  $data['haslo'], 'post_' . $new_post_id);
      // Add program to the file data
      update_field('field_5de2cfad8e448',  $program, 'post_' . $new_post_id);
      // Add program version to the file data
      update_field('field_5de2cfbe8e449',  $wersja, 'post_' . $new_post_id);
      // Add SQL version to the file data
      update_field('field_5de2cfc58e44a',  $sql, 'post_' . $new_post_id);
      // Add description to the file data
      update_field('field_5de2cfd08e44b',  $data['problem'], 'post_' . $new_post_id);
      // Add attachment to the file data

      $uploaded_files = $submission->uploaded_files();

      if (count($uploaded_files)) {
        if (isset($uploaded_files['zalacznik'])) {
          if ($uploaded_files['zalacznik'] != '') {
            update_field('field_5de2d0018e44c',  site_url() . explode('htdocs', $uploaded_files['zalacznik'])[1], 'post_' . $new_post_id);
          }
        }
      }
    }
  }
}

function my_login_redirect($redirect_to, $request, $user)
{
  if (isset($user->roles) && is_array($user->roles)) {
    if (in_array('registered', $user->roles)) {
      $redirect_to =  'https://partnerzy.wapro.pl/dziekujemy-za-rejestracje/';
    }

    if (in_array('registeredbiuro', $user->roles)) {
      $redirect_to =  'https://biura.wapro.pl/dziekujemy-za-rejestracje/';
    }
  }

  return $redirect_to;
}
add_filter('login_redirect', 'my_login_redirect', 10, 3);

$customError = 'test';

function custom_login()
{
  if (array_key_exists('custom_login', $_POST)) {
    $creds = array();
    $creds['user_login'] = $_POST['log'];
    $creds['user_password'] = $_POST['pwd'];

    if (array_key_exists('rememberme', $_POST)) {
      $creds['remember'] = true;
    } else {
      $creds['remember'] = false;
    }

    $user = wp_signon($creds, false);
    if (is_wp_error($user)) {
      wp_redirect(site_url('logowanie/?customError=' . array_keys($user->errors)[0]));
      exit;
    } else {
      if (array_key_exists('redirect_to', $_POST)) {
        if (in_array('registered', $user->roles) || in_array('registeredbiuro', $user->roles) && (get_site_url() == 'https://biura.wapro.pl' || get_site_url() == 'https://partnerzy.wapro.pl')) {
          wp_redirect(get_site_url() . '/dziekujemy-za-rejestracje/');
        } elseif (in_array('subscriber', $user->roles) && get_site_url() == 'https://biura.wapro.pl') {
          wp_redirect(get_site_url() . '/dla-biur/');
        } elseif (in_array('subscriber', $user->roles) && get_site_url() == 'https://partnerzy.wapro.pl') {
          wp_redirect(get_site_url() . '/dla-dealerow/');
        } else {
          wp_redirect($_POST['redirect_to']);
        }
      } else {
        wp_redirect(site_url());
      }
      exit;
    }
  }
}
// run it before the headers and cookies are sent
add_action('init', 'custom_login');

function custom_logout()
{
  if (array_key_exists('customAction', $_GET)) {
    if ($_GET['customAction'] == 'logout') {
      wp_destroy_current_session();
      wp_clear_auth_cookie();
      wp_set_current_user(0);
      do_action('wp_logout');
      //wp_logout();

      if (array_key_exists('redirect_to', $_POST)) {
        wp_redirect(get_site_url() . $_POST['redirect_to']);
      } elseif (array_key_exists('redirect_to', $_GET)) {
        wp_redirect(get_site_url() . $_GET['redirect_to']);
      } else {
        wp_redirect(site_url());
      }
      exit;
    }
  }
}
// run it before the headers and cookies are sent
add_action('init', 'custom_logout');

// Remove Private, Protected prefix from post Title
add_filter('private_title_format', 'cv_disable_title_prefix', 99, 2);
add_filter('protected_title_format', 'cv_disable_title_prefix', 99, 2);
function cv_disable_title_prefix($format, $post)
{
  $format = '%s';
  return $format;
}

//enqueue the script which will use the api
function api_callings_scripts()
{
  wp_enqueue_script('rejestracja', get_template_directory_uri() . '/custom/rejestracja.js', ['jquery'], NULL, TRUE);
  // Pass nonce to JS.
  wp_localize_script('rejestracja', 'RejestracjaSettings', [
    'nonce' => wp_create_nonce('wp_rest'),
  ]);

  wp_enqueue_script('umowa-serwisowa', get_template_directory_uri() . '/custom/umowa-serwisowa.js', ['jquery'], NULL, TRUE);
  // Pass nonce to JS.
  wp_localize_script('umowa-serwisowa', 'UmowaSerwisowaSettings', [
    'nonce' => wp_create_nonce('wp_rest'),
  ]);
}
add_action('wp_enqueue_scripts', 'api_callings_scripts');

function randomPassword()
{
  $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890#$%^&*!?<>';
  $pass = array();
  $alphaLength = strlen($alphabet) - 1;
  for ($i = 0; $i < 20; $i++) {
    $n = rand(0, $alphaLength);
    $pass[] = $alphabet[$n];
  }
  return implode($pass);
}

function prepareFileName($filename): string
{
  setlocale(LC_ALL, "en_US.utf8");
  $filename = iconv("utf-8", "ascii//TRANSLIT", $filename);
  $filename = strtolower($filename);
  $filename = preg_replace('/[\(\)\[\]\/]/', '', $filename);
  $filename = preg_replace('/[\s-]+/', '-', $filename);
  $filename = trim($filename, '.-_');

  return $filename;
}

add_filter('site_option_active_sitewide_plugins', 'modify_sitewide_plugins');

function modify_sitewide_plugins($value)
{
  global $current_blog;

  //if( $current_blog->blog_id == 2 ) {
  unset($value['custom-post-type-ui/custom-post-type-ui.php']);
  //}

  return $value;
}

// Add Shortcode
function show_dealers_form()
{
  switch_to_blog(3);
  $output = do_shortcode('[searchandfilter id="47062"]');
  restore_current_blog();
  return $output;
}
add_shortcode('showdealersform', 'show_dealers_form');

function the_slug_exists($post_name)
{
  global $wpdb, $current_blog;

  $blog_id = $current_blog->blog_id;

  if ($wpdb->get_row("SELECT post_name FROM " . $wpdb->base_prefix . $blog_id . "_posts WHERE post_name = '" . $post_name . "' AND post_status = 'private'", 'ARRAY_A')) {
    return true;
  } else {
    return false;
  }
}

function mytheme_get_slugs($link)
{
  $link = str_replace(home_url('/'), '', $link);
  $link = explode('?', $link)[0];
  if (($len = strlen($link)) > 0 && $link[$len - 1] == '/') {
    $link = substr($link, 0, -1);
  }
  return explode('/', $link);
}

function validatenip($nip)
{
  $nip = preg_replace("/-/", "", $nip);
  $valid = false;

  if (preg_match('/^([0-9])\1{9}$/', $nip)) {
    return $valid;
  }

  $weights = array(6, 5, 7, 2, 3, 4, 5, 6, 7);
  $nip = preg_replace('/^PL/', '', $nip);

  if (strlen($nip) == 10 && is_numeric($nip)) {
    $sum = 0;

    for ($i = 0; $i < 9; $i++) {
      $sum += $nip[$i] * $weights[$i];
    }

    $valid = ($sum % 11) == $nip[9];
  }

  return $valid;
}

add_action('set_user_role', 'custom_user_change_function', 10, 3);

function custom_user_change_function($user_id, $role, $old_roles, $manual = false)
{
  global $current_blog;

  if (is_admin() or $manual) {
      $headers = [];
      $headers[] = 'From: WAPRO ERP <kontakt@wapro.pl>';
      $headers[] = 'Reply-To: serwis.wapro@asscobs.pl';
      $headers[] = 'Content-Type: text/html; charset=UTF-8';

      if ($current_blog->blog_id == '3' && $role == 'subscriber' && !in_array('subscriber', $old_roles)) {
          $user_info = get_userdata($user_id);
          $message = '<body bgcolor="#f7f5f5" style="background-color:#f7f5f5;">
    <table border="0" cellspacing="0" cellpadding="0" align="center" max-width="600" bgcolor="#fff" style="max-width:600px; background-color:#fff;">
      <tbody max-width="600" style="max-width:600px;">
        <tr max-width="600" style="max-width:600px;">
          <td colspan="3">
            <table>
              <tr>
                <td width="200" style="width:200px;"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/logo.png" alt="WAPRO ERP by Asseco" title="WAPRO ERP by Asseco" /></td>
                <td max-width="400" style="max-width:400px;">
                  <table>
                    <tr>
                      <td width="360" align="right" style="width:360px; text-align:right; font-family:arial; font-size:14px; color:#000; text-decoration:none;">
                        <a style="font-family:arial; font-size:14px; color:#000; text-decoration:none;" href="http://www.wapro.pl">WAPRO ERP</a> 
                      </td>
                      <td width="40" style="width:40px;"></td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          </td>
        </tr>
        <tr width="600" style="width:600px;">
          <td colspan="3"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/header-line.png" alt="" title="" /></td>
        </tr>
        <tr width="600" style="width:600px;">
          <td width="40" style="width:40px;"></td>
          <td width="520" style="width:580px;">
                    

  <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Aktywacja konta użytkownika </h2>


  <p style="font-size:12px; text-align:left; font-family:Arial, Helvetica, Verdana, sans-serif; margin-right:0px; margin-left:0px;">

  <br>
  W serwisie WAPRO ERP zostało aktywowane konto dla użytkownika<b> ' . $user_info->first_name . ' ' . $user_info->last_name . ' </b> <br><br>
  Login do konta to: <b>' . $user_info->user_login . '</b><br><br>

  Przydzielono uprawnienia do <b>Portalu dla Parnterów </b><br><br>

  Aby przejść do <b>Portalu dla Partnerów </b>kliknij: <a href="https://partnerzy.wapro.pl/logowanie/" style="color:#d42027;text-decoration:underline;" "><span style="color:#d42027">https://partnerzy.wapro.pl/logowanie/  </span></a><br><br>

  Aby zresetować hasło kliknij: <a href="https://partnerzy.wapro.pl/resetowanie-hasla" style="color:#d42027;text-decoration:underline;" "><span> https://partnerzy.wapro.pl/resetowanie-hasla</span></a><br><br>

  W przypadku pytań prosimy o kontakt na adres email: <br>
  <a href="mailto:forum.wapro@assecobs.pl" style="color:#d42027;text-decoration:underline;" "><span style=”color:#d42027”> forum.wapro@assecobs.pl </span></a>
  </p>

            <table border="0" cellspacing="0" cellpadding="0">
              <tr>
                <td style="height: 118px">
                  <strong style="font-family:arial; font-size:14px;">
                  Z poważaniem,</strong><br />
                  <span style="font-family:arial; font-size:14px; margin-bottom:20px;"> Administrator portalu<br>
  Asseco WAPRO ERP
  </span>
                </td>
              </tr>
            </table>
          </td>
          <td width="40" style="width:40px;"></td>
        </tr>
      </tbody>
    </table>
  </body>
  ';

          wp_mail($user_info->user_email, 'Aktywacja konta użytkownika', $message, $headers);
      } elseif ($current_blog->blog_id == '4' && $role == 'subscriber' && !in_array('subscriber', $old_roles)) {
          $user_info = get_userdata($user_id);
          $message = '<body bgcolor="#f7f5f5" style="background-color:#f7f5f5;">
    <table border="0" cellspacing="0" cellpadding="0" align="center" max-width="600" bgcolor="#fff" style="max-width:600px; background-color:#fff;">
      <tbody max-width="600" style="max-width:600px;">
        <tr max-width="600" style="max-width:600px;">
          <td colspan="3">
            <table>
              <tr>
                <td width="200" style="width:200px;"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/logo.png" alt="WAPRO ERP by Asseco" title="WAPRO ERP by Asseco" /></td>
                <td max-width="400" style="max-width:400px;">
                  <table>
                    <tr>
                      <td width="360" align="right" style="width:360px; text-align:right; font-family:arial; font-size:14px; color:#000; text-decoration:none;">
                        <a style="font-family:arial; font-size:14px; color:#000; text-decoration:none;" href="http://www.wapro.pl">WAPRO ERP</a> 
                      </td>
                      <td width="40" style="width:40px;"></td>
                    </tr>
                  </table>
                </td>
              </tr>
            </table>
          </td>
        </tr>
        <tr width="600" style="width:600px;">
          <td colspan="3"><img BORDER="0" style="display:block; padding:0; margin:0;" src="http://www.assecobs.pl/storage/mail/stat/header-line.png" alt="" title="" /></td>
        </tr>
        <tr width="600" style="width:600px;">
          <td width="40" style="width:40px;"></td>
          <td width="520" style="width:580px;">
                    
  
  <h2 style="font-family:Arial, Helvetica, Verdana, sans-serif;"> Aktywacja konta użytkownika </h2>
  
  
  <p style="font-size:12px; text-align:left; font-family:Arial, Helvetica, Verdana, sans-serif; margin-right:0px; margin-left:0px;">
  
  <br>
  W serwisie WAPRO ERP zostało aktywowane konto dla użytkownika<b> ' . $user_info->first_name . ' ' . $user_info->last_name . ' </b> <br><br>
  Login do konta to: <b>' . $user_info->user_login . '</b><br><br>
  
  Przydzielono uprawnienia do <b>Portalu dla Biur Rachunkowych </b><br><br>
  
  Aby przejść do <b>Portalu dla Biur Rachunkowych </b>kliknij: <a href="https://biura.wapro.pl/logowanie/" style="color:#d42027;text-decoration:underline;" "><span style="color:#d42027">https://biura.wapro.pl/logowanie/  </span></a><br><br>
  
  Aby zresetować hasło kliknij: <a href="https://biura.wapro.pl/resetowanie-hasla" style="color:#d42027;text-decoration:underline;" "><span> https://biura.wapro.pl/resetowanie-hasla</span></a><br><br>
  
  W przypadku pytań prosimy o kontakt na adres email: <br>
  <a href="mailto:forum.wapro@assecobs.pl" style="color:#d42027;text-decoration:underline;" "><span style=”color:#d42027”> forum.wapro@assecobs.pl </span></a>
  </p>
  
            <table border="0" cellspacing="0" cellpadding="0">
              <tr>
                <td style="height: 118px">
                  <strong style="font-family:arial; font-size:14px;">
                  Z poważaniem,</strong><br />
                  <span style="font-family:arial; font-size:14px; margin-bottom:20px;"> Administrator portalu<br>
  Asseco WAPRO ERP
  </span>
                </td>
              </tr>
            </table>
          </td>
          <td width="40" style="width:40px;"></td>
        </tr>
      </tbody>
    </table>
  </body>  
  ';

          wp_mail($user_info->user_email, 'Aktywacja konta użytkownika', $message, $headers);
      }
  }
}

//add_filter('jetpack_development_mode', '__return_false');

// [acfcond field='']foobar[/acfcond]
function acfcond($atts = [], $content = null)
{
  $atts = array_change_key_case((array)$atts, CASE_LOWER);

  if (get_field($atts['field'])) {
    $content = do_shortcode($content);
  } else {
    $content = '';
  }

  return $content;
}
add_shortcode('acfcond', 'acfcond');

function acfelsecond($atts = [], $content = null)
{
  $atts = array_change_key_case((array)$atts, CASE_LOWER);

  if (!get_field($atts['field'])) {
    $content = do_shortcode($content);
  } else {
    $content = '';
  }

  return $content;
}
add_shortcode('acfelsecond', 'acfelsecond');
